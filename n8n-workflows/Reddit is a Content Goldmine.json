{
  "active": false,
  "connections": {
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "r/smallbusiness/automation",
            "type": "main",
            "index": 0
          },
          {
            "node": "r/smallbusiness/AI Automation",
            "type": "main",
            "index": 0
          },
          {
            "node": "r/n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "r/smallbusiness/automation": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "r/smallbusiness/AI Automation": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "r/n8n": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Request, System, or Question?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Request",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "System",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Add to Airtable",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Request, System, or Question?",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "Question",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Request",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "System",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Question",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request, System, or Question?": {
      "main": [
        [
          {
            "node": "Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "System",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Question",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "System": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Question": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-06T19:08:42.306Z",
  "id": "R2NodCRhd9coLUU9",
  "isArchived": false,
  "meta": null,
  "name": "Reddit is a Content Goldmine",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 7
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -208,
        592
      ],
      "id": "c3e50487-ee31-4a41-a97b-3bda57129f28",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "operation": "search",
        "subreddit": "smallbusiness",
        "keyword": "Automation",
        "limit": 5,
        "additionalFields": {
          "sort": "new"
        }
      },
      "type": "n8n-nodes-base.reddit",
      "typeVersion": 1,
      "position": [
        32,
        592
      ],
      "id": "d6330e36-d615-4a1a-a423-915afa372646",
      "name": "r/smallbusiness/automation"
    },
    {
      "parameters": {
        "operation": "search",
        "subreddit": "smallbusiness",
        "keyword": "AI Automation",
        "limit": 5,
        "additionalFields": {
          "sort": "new"
        }
      },
      "type": "n8n-nodes-base.reddit",
      "typeVersion": 1,
      "position": [
        32,
        384
      ],
      "id": "1de8cd8c-507d-4807-b583-9bbc809f6311",
      "name": "r/smallbusiness/AI Automation"
    },
    {
      "parameters": {
        "operation": "getAll",
        "subreddit": "n8n",
        "limit": 10,
        "filters": {
          "category": "hot"
        }
      },
      "type": "n8n-nodes-base.reddit",
      "typeVersion": 1,
      "position": [
        32,
        784
      ],
      "id": "b1a28f7c-a001-4c1b-aac8-b5fadcd348f9",
      "name": "r/n8n"
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        224,
        592
      ],
      "id": "8640fa41-d19e-4648-856c-c0441f98ae05",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"summary\": \"This is an example summary\",\n\t\"relevancy_score\": 0.75,\n    \"detail_score\": 0.90\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1104,
        272
      ],
      "id": "c8fa2d6a-14a7-4ccc-bd0d-6d8a0a226ce2",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"summary\": \"This is an example summary\",\n\t\"relevancy_score\": 0.75,\n    \"detail_score\": 0.90\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1104,
        560
      ],
      "id": "2c52f69e-f6ca-42e6-aeef-f07a0e520ebb",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1552,
        400
      ],
      "id": "be9d06be-60ab-4583-949f-972f0d64f5c0",
      "name": "Merge1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {
          "temperature": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        480,
        624
      ],
      "id": "825c46bc-8ab1-4582-b840-c0d7d766128d",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"summary\": \"This is an example summary\",\n\t\"relevancy_score\": 0.85\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1104,
        880
      ],
      "id": "edf43ef4-1218-46d2-89a8-8104dfee3377",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        928,
        272
      ],
      "id": "8a2bf76e-0ada-414c-b955-19008dc0947b",
      "name": "OpenAI Chat Model1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        928,
        560
      ],
      "id": "3b6be6a0-3aec-456e-8d0a-e42bdc0475b4",
      "name": "OpenAI Chat Model2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        928,
        880
      ],
      "id": "0dd91f62-7a68-4384-9e50-df4add437bf5",
      "name": "OpenAI Chat Model3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9855d661-58cd-4485-b2d8-3a25b9eb0ff6",
              "name": "Type",
              "value": "System",
              "type": "string"
            },
            {
              "id": "f27af707-515e-41f9-8fba-cf9374270876",
              "name": "Summary",
              "value": "={{ $json.output.summary }}",
              "type": "string"
            },
            {
              "id": "0e37256f-826b-4e5e-ac72-180a61cf4ce8",
              "name": "Relevancy Score",
              "value": "={{ $json.output.relevancy_score }}",
              "type": "string"
            },
            {
              "id": "a23964d1-36c4-4fb6-ab1a-5027bbd61aaa",
              "name": "Detail Score",
              "value": "={{ $json.output.detail_score }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1264,
        400
      ],
      "id": "7aae6371-d50b-4896-b607-b090e066f852",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9855d661-58cd-4485-b2d8-3a25b9eb0ff6",
              "name": "Type",
              "value": "Question",
              "type": "string"
            },
            {
              "id": "f27af707-515e-41f9-8fba-cf9374270876",
              "name": "Summary",
              "value": "={{ $json.output.summary }}",
              "type": "string"
            },
            {
              "id": "0e37256f-826b-4e5e-ac72-180a61cf4ce8",
              "name": "Relevancy Score",
              "value": "={{ $json.output.relevancy_score }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1264,
        720
      ],
      "id": "5c82acb3-8fea-4fcf-ba7f-2efd5667a7ba",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9855d661-58cd-4485-b2d8-3a25b9eb0ff6",
              "name": "Type",
              "value": "Request",
              "type": "string"
            },
            {
              "id": "f27af707-515e-41f9-8fba-cf9374270876",
              "name": "Summary",
              "value": "={{ $json.output.summary }}",
              "type": "string"
            },
            {
              "id": "0e37256f-826b-4e5e-ac72-180a61cf4ce8",
              "name": "Relevancy Score",
              "value": "={{ $json.output.relevancy_score }}",
              "type": "string"
            },
            {
              "id": "a23964d1-36c4-4fb6-ab1a-5027bbd61aaa",
              "name": "Detail Score",
              "value": "={{ $json.output.detail_score }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1264,
        112
      ],
      "id": "a5502404-f55e-42c0-abbe-9220b75ece44",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "content": "# Fetch Reddit Posts & Find Content Ideas\n\n## How to Set Up\n1. Add your preferred keyword or Sub-reddit in each Reddit node\n2. Add your LLM api-key\n3. Optional: Re-write AI agent prompts to fit your needs\n4. Create an Airtable/Google Sheet to match the columns + add your connection",
        "height": 660,
        "width": 620,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -256,
        112
      ],
      "typeVersion": 1,
      "id": "5b69ff9d-ba41-4900-a3c2-19b34f33fc49",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appg2URmi7xqyyXXR",
          "mode": "list",
          "cachedResultName": "Personal Base",
          "cachedResultUrl": "https://airtable.com/appg2URmi7xqyyXXR"
        },
        "table": {
          "__rl": true,
          "value": "tblW2s3f4auvVuQyd",
          "mode": "list",
          "cachedResultName": "Content Ideation System",
          "cachedResultUrl": "https://airtable.com/appg2URmi7xqyyXXR/tblW2s3f4auvVuQyd"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Post or Comment?": "Post",
            "Type": "={{ $('Merge1').item.json.Type }}",
            "Summary": "={{ $('Merge1').item.json.Summary }}",
            "Relevancy Score": "={{ $('Merge1').item.json['Relevancy Score'] }}",
            "Detail Score": "={{ $('Merge1').item.json['Detail Score'] }}",
            "OG Post": "={{ $('Merge').item.json.title }} - {{ $('Merge').item.json.selftext }}",
            "Source": "=r/{{ $('Merge').item.json.subreddit }}",
            "OG Link": "={{ $('Merge').item.json.url }}",
            "Link": "={{ $('Merge').item.json.url }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Post or Comment?",
              "displayName": "Post or Comment?",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Post",
                  "value": "Post"
                },
                {
                  "name": "Comment",
                  "value": "Comment"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Type",
              "displayName": "Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Request",
                  "value": "Request"
                },
                {
                  "name": "System",
                  "value": "System"
                },
                {
                  "name": "Question",
                  "value": "Question"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "OG Post",
              "displayName": "OG Post",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "OG Link",
              "displayName": "OG Link",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Relevancy Score",
              "displayName": "Relevancy Score",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Detail Score",
              "displayName": "Detail Score",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1744,
        400
      ],
      "id": "d8733019-4e69-4931-aab5-93478890a998",
      "name": "Add to Airtable"
    },
    {
      "parameters": {
        "inputText": "={{ $json.selftext }}",
        "categories": {
          "categories": [
            {
              "category": "Automation Request",
              "description": "Use this category if the post appears to possibly come from a business owner requesting help with a certain AI or automation process. For context, I am an AI and automation expert, specifically with low-code automated workflow, AI agents, and more."
            },
            {
              "category": "Automation System",
              "description": "Use this category if the post appears to possibly come from somebody who has built an AI automation system that I could use as an idea for a system that I could create myself. For context, I am an AI and automation expert, specifically with low-code automated workflow, AI agents, and more."
            },
            {
              "category": "Question",
              "description": "Use this category if the user appears to be asking a general AI and Automation question, not referencing a specific constructible system"
            }
          ]
        },
        "options": {
          "fallback": "discard",
          "systemPromptTemplate": "Please classify the text provided by the reddit user into one of the following categories: {categories}, and use the provided formatting instructions below. Don't explain, and only output the json."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        512,
        400
      ],
      "id": "6ff135c3-7ea1-4b82-aeca-56b52bc376e2",
      "name": "Request, System, or Question?"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.selftext }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=## Role\nYou are an expert AI and Automation consultant.\n\n## Task\nYour task is to:\n\n1. Analyze the provided reddit post/comment from a user who is requesting an AI automation system to be created.\n2. Summarize the request into a concise, yet comprehensive paragraph detailing the exact system the user wants to be built.\n3. Assign a relevancy score to the system based off its relevancy to my business, skills, and offerings, on a scale from 0.05-0.95.\n4. Assign a detail score to the system based on the amount of detail the user provided. Anything over 0.9 should have enough information to recreate the system in N8N. Anything over 0.7 should have some details regarding the workflow.\n\nFor context, I run an AI Automation agency which builds automated workflows, AI agents, and more, primarily using N8N.\n\nOnly output the summary and the scores. Do not provide an explanation."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        928,
        112
      ],
      "id": "7a57983e-2fba-4e86-97ed-9f548f4005af",
      "name": "Request"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.selftext }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "## Role\nYou are an expert AI and Automation consultant.\n\n## Task\nYour task is to:\n\n1. Analyze the provided reddit post/comment from a user who has displayed their AI automation system.\n2. Summarize the system described into a concise, yet comprehensive paragraph detailing the exact system the user wants to be built.\n3. Assign a relevancy score to the system based off its relevancy to my business, skills, and offerings, on a scale from 0.05-0.95.\n4. Assign a detail score to the system based on the amount of detail the user provided. Anything over 0.9 should have enough information to recreate the system in N8N. Anything over 0.7 should have some details regarding the workflow.\n\nFor context, I run an AI Automation agency which builds automated workflows, AI agents, and more, primarily using N8N.\n\nOnly output the summary and the scores. Do not provide an explanation."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        928,
        400
      ],
      "id": "ce16f36d-1d60-4084-9780-6fcc0959ddf9",
      "name": "System"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.selftext }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "## Role\nYou are an expert AI and Automation consultant.\n\n## Task\nYour task is to:\n\n1. Analyze the provided reddit post/comment from a user who has displayed their AI automation system.\n2. Summarize the question to remove unnecessary filler while keeping all the important aspects of the question.\n3. Assign a score to the question based off its relevancy to my business, skills, and offerings, on a scale from 0.05-0.95.\n\nFor context, I run an AI Automation agency which builds automated workflows, AI agents, and more, primarily using N8N. These questions will be used as content inspiration\n\nOnly output the summary and the score. Do not provide an explanation."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        928,
        720
      ],
      "id": "a794ea29-134b-4984-a421-c18135106327",
      "name": "Question"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-07-06T19:08:42.306Z",
      "updatedAt": "2025-07-06T19:08:42.306Z",
      "role": "workflow:owner",
      "workflowId": "R2NodCRhd9coLUU9",
      "projectId": "aYesZFcPjHzYQyLq"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-13T13:25:50.950Z",
  "versionId": "4f9db868-b241-4c52-8e34-ad8640ed2716"
}