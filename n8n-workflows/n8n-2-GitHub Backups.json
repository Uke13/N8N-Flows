{"createdAt":"2025-07-16T21:07:19.997Z","updatedAt":"2025-07-19T20:25:30.329Z","id":"DcWmfj0MBXzjC6PT","name":"n8n-2-GitHub Backups","active":false,"isArchived":false,"nodes":[{"parameters":{"resource":"file","owner":{"__rl":true,"value":"={{ $('Config').item.json.repo_owner }}","mode":"name"},"repository":{"__rl":true,"value":"={{ $('Config').item.json.repo_name }}","mode":"name"},"filePath":"={{ $('Config').item.json.repo_path }}/{{ $('Split Out').item.json.name }}.json","fileContent":"={{ $node[\"Split Out\"].json }}","commitMessage":"=Backup workflow: {{ $('Split Out').item.json.name }}"},"id":"d4a8cc1d-c2b4-4bdf-bb0b-5f1808f4335e","name":"Create new file","type":"n8n-nodes-base.github","position":[940,280],"typeVersion":1,"webhookId":"b440dead-fad0-4546-8ca7-201aa2ea2936","credentials":{"githubApi":{"id":"WGgeGg80xfPdCcv6","name":"GitHub account"}}},{"parameters":{"content":"# Links\n- ## [Github Folder](https://github.com/AndrewBoichenko/n8n-workflows/)","height":120,"width":400},"type":"n8n-nodes-base.stickyNote","position":[-1800,240],"typeVersion":1,"id":"e1743f75-7836-459f-9ac8-7d4dd53741b6","name":"Sticky Note3"},{"parameters":{"content":"# How it works \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `repo_path` for the directory path and `ID.json` for the filename.\nThe Repo Owner, Repo Name and Main folder are set using the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\nPlease check out my other items on [gumroad](https://boanse.gumroad.com/?section=k_Sn6LcT_dzJFnp5jmsM5A%3D%3D)\nYou might also like something else☺️","height":340,"width":400},"type":"n8n-nodes-base.stickyNote","position":[-1800,400],"typeVersion":1,"id":"474c34df-dc28-4d76-ad71-ae5bad1a112f","name":"Sticky Note4"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"6655f56f-b447-43eb-84a2-be8b71524af7","leftValue":"={{ $json.error.cause.status }}","rightValue":"404","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"new"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"9d3eb37e-8f0e-4487-b5a7-92b462c0d874","leftValue":"={{ $json.statusCode }}","rightValue":"200","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"existing"}]},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[560,400],"id":"e46dd28c-a825-478e-b4e2-1d02882e306e","name":"Switch"},{"parameters":{"assignments":{"assignments":[{"id":"03f51f9c-4681-4423-91d2-d32f4c18d6bc","name":"repo_owner","value":"Uke13","type":"string"},{"id":"0c9b521a-b698-4b43-9eb0-bbf744760158","name":"repo_name","value":"N8N-Flows","type":"string"},{"id":"91627e70-a71a-4be0-a6f6-b04d5c8469d8","name":"repo_path","value":"n8n-workflows","type":"string"},{"id":"983a2c87-9d69-4d64-ab88-ec1b1117c6e6","name":"sub_path","value":"folder","type":"string"}]},"includeOtherFields":true,"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-480,400],"id":"ec889460-0456-4da6-b14f-1e8b25680a30","name":"Config"},{"parameters":{"rule":{"interval":[{}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-720,400],"id":"381d4beb-b62a-43b7-817d-65d0d3baf2c5","name":"Schedule Trigger"},{"parameters":{"url":"https://n8n.wtfkreative.com/api/v1/workflows","authentication":"predefinedCredentialType","nodeCredentialType":"n8nApi","sendHeaders":true,"headerParameters":{"parameters":[{"name":"X-N8N-API-KEY","value":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MDA5MjcyMC1iYzIyLTRhZDQtOWZmOS1iNDJkZjZjZDM3YzYiLCJpc3MiOiJuOG4iLCJhdWQiOiJwdWJsaWMtYXBpIiwiaWF0IjoxNzUyOTQ4NTI4fQ.s_b3AM-DBT-7yXRHy-vWWwtP2C-5novCiGcmdLkD_gk"}]},"options":{"response":{"response":{"responseFormat":"json"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-240,400],"id":"37892b44-d87f-48b0-90b4-5d03ac11aaf2","name":"HTTP Request","credentials":{"n8nApi":{"id":"tdftM5ngXHwNDhII","name":"n8n account"}}},{"parameters":{"fieldToSplitOut":"data","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[0,400],"id":"bf4436ca-211f-4ca3-888d-2a7258bdc1d9","name":"Split Out"},{"parameters":{"method":"HEAD","url":"=https://api.github.com/repos/{{ $('Config').item.json.repo_owner }}/{{ $('Config').item.json.repo_name }}/contents/{{ $('Config').item.json.repo_path }}/{{ $json.name | slugify }}.json","authentication":"predefinedCredentialType","nodeCredentialType":"githubApi","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"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"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[220,400],"id":"233c6c8f-7c12-41d4-9ed8-6da1b6aac6b2","name":"GitHub File Exists Check","credentials":{"githubApi":{"id":"WGgeGg80xfPdCcv6","name":"GitHub account"}},"onError":"continueRegularOutput"},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"value":"={{ $('Config').item.json.repo_owner }}","mode":"name"},"repository":{"__rl":true,"value":"={{ $('Config').item.json.repo_name }}","mode":"name"},"filePath":"={{ $('Config').item.json.repo_path }}/{{ $('Split Out').item.json.name }}.json","fileContent":"={{ $node[\"Split Out\"].json }}","commitMessage":"=Backup workflow: {{ $('Split Out').item.json.name }}"},"id":"fc575ea8-0055-44e3-89cc-4c513dac6234","name":"Edit Existing","type":"n8n-nodes-base.github","position":[940,500],"typeVersion":1,"webhookId":"b440dead-fad0-4546-8ca7-201aa2ea2936","credentials":{"githubApi":{"id":"WGgeGg80xfPdCcv6","name":"GitHub account"}}},{"parameters":{"assignments":{"assignments":[{"id":"16bd81ea-ca9a-4183-be96-64f9283563ed","name":"file_action_type","value":"new","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1160,280],"id":"5f404c7b-b7f2-4098-b644-1a1c8c1a296a","name":"Tag New File"},{"parameters":{"assignments":{"assignments":[{"id":"d04abae1-d66e-4ae6-8798-c75a9b645032","name":"file_action_type","value":"updated","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1160,500],"id":"14bce7d5-f449-4fd6-9b3e-3fc3148230d4","name":"Tag Updated File"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[1440,400],"id":"dbe3bdc9-e529-4c59-8041-3541fa51fb9c","name":"Merge"},{"parameters":{"jsCode":"// Count new files\nconst newCount = items.filter(item => item.json.file_action_type === 'new').length;\n\n// Count updated files\nconst updatedCount = items.filter(item => item.json.file_action_type === 'updated').length;\n\n// Return a single item with the aggregated counts\nreturn [{\n  json: {\n    new_files_count: newCount,\n    updated_files_count: updatedCount,\n    timestamp: new Date().toISOString() // Optional: add a timestamp for the message\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1660,400],"id":"9f3b9f97-0b34-48cb-8bd9-337943520b1b","name":"Calculate Counts"},{"parameters":{"text":"=N8N Workflow Backup Summary:  New Files Created: {{ $json.new_files_count }} Existing Files Updated: {{ $json.updated_files_count }}  Backup complete! (Generated: {{ $json.timestamp.slice(0, 19).replace('T', ' ') }})","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[1880,400],"id":"1b13ddff-4f46-4445-abe5-4fba5f0f3f01","name":"Send a text message","webhookId":"906cacce-cda3-45bb-9baf-3d951ef714d8","credentials":{"telegramApi":{"id":"HHgbp1SZSR5uC5wr","name":"Telegram account"}}}],"connections":{"Create new file":{"main":[[{"node":"Tag New File","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Create new file","type":"main","index":0}],[{"node":"Edit Existing","type":"main","index":0}]]},"Config":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Config","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"GitHub File Exists Check","type":"main","index":0}]]},"GitHub File Exists Check":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Edit Existing":{"main":[[{"node":"Tag Updated File","type":"main","index":0}]]},"Tag Updated File":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Tag New File":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Calculate Counts","type":"main","index":0}]]},"Calculate Counts":{"main":[[{"node":"Send a text message","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner","errorWorkflow":"ErJsFIMzI5GAr6Io"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"f42684f1-148c-49c1-b501-1442b65cc7b8","triggerCount":0,"tags":[]}
