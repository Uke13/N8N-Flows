{
  "active": false,
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Script Writer",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Set Global Variables1": {
      "main": [
        [
          {
            "node": "Script Writer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "text to image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Bridge Code1": {
      "main": [
        [
          {
            "node": "Format JSON2VIDEO Structure",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Bridge Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "SET VOICE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Script Writer": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Script Writer",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "text to image": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format JSON2VIDEO Structure": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SET VOICE": {
      "main": [
        [
          {
            "node": "Set Global Variables1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk2": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Video": {
      "main": [
        [
          {
            "node": "Youtube Post",
            "type": "main",
            "index": 0
          },
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postiz",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Publishing Agent": {
      "main": [
        [
          {
            "node": "Download Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Publishing Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "SUCCESS",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ERROR",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Youtube Post": {
      "main": [
        [
          {
            "node": "UPDATE YOUTUBE COLUMN",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UPDATE YOUTUBE COLUMN": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UPDATE FB COLUMN": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "UPDATE INSTA COLUMN": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "UPDATE TIKTOK COLUMN": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "ERROR": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "UPDATE FB COLUMN",
            "type": "main",
            "index": 0
          },
          {
            "node": "UPDATE INSTA COLUMN",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postiz4": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet": {
      "main": [
        [
          {
            "node": "UPDATE TIKTOK COLUMN",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Channel IDs - IUP": {
      "main": [
        [
          {
            "node": "Postiz4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postiz": {
      "main": [
        [
          {
            "node": "Channel IDs - IUP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "openrouter": {
      "ai_languageModel": [
        [
          {
            "node": "Publishing Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet1": {
      "main": [
        [
          {
            "node": "Publishing Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Publishing Agent",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-13T16:38:15.667Z",
  "id": "t6cpYYvfb6b2SlMs",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "REPLICATE JSON2VIDEO WITH PYTHON",
  "nodes": [
    {
      "parameters": {},
      "id": "1b46062c-c50a-48b1-a98b-f84867c78719",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -6304,
        16
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a social media marketing specialist creating a YouTube video.\nYour task is to generate a series of detailed scenes based on provided input variables, optimized for engagement.\n\n---\n\n### Input Variables:\n\n- **SCRIPT_CONTENT**: The full video script to break down into individual scenes. \n- **VIDEO_TOPIC**: The main subject or title of the video.\n- **SCRIPT_NARRATION_TONE**: A detailed description of the desired tone/style for the script's voice-over and overall feel.\n\n",
        "hasOutputParser": true,
        "needsFallback": true,
        "options": {
          "systemMessage": "=You are a technical video scene parser.  \nYour one and only function is to take a pre-written script and convert it into the required JSON configuration for the AI video maker.  \nYou do NOT have creative license to alter the script.\n\n---\n\n### CRITICAL DIRECTIVES\n\n1. **USE THE SCRIPT VERBATIM**  \n   The provided `SCRIPT_CONTENT` is the final, approved narration.  \n   You MUST use the sentences from it exactly as they are written for the `text` field.\n\n2. **NO NEW CONTENT**  \n   DO NOT invent, add, paraphrase, expand, shorten, or rewrite any narrative content.  \n   Your job is to segment the existing text, not create new text.\n\n3. **JSON ONLY**  \n   You MUST return ONLY a valid JSON object.  \n   Do not include explanations, apologies, or any text before or after the JSON structure.\n\n4. **NO QUESTIONS**  \n   Make reasonable assumptions silently.  \n   Never ask for clarification.\n\n---\n\n### INPUT VARIABLES\n\n- **SCRIPT_CONTENT**: {{ $json.output }}\n- **VIDEO_TOPIC**: {{ $('Set Global Variables1').item.json.TITLE }}\n- **SCRIPT_NARRATION_TONE**: {{ $('Set Global Variables1').item.json.Script_Tone }}\n\n---\n\n### SCENE GENERATION PLAN\n\n- Process the `SCRIPT_CONTENT` sequentially.  \n- Generate one scene for each sentence or short pair of sentences.  \n- The `text` for each scene = exactly that sentence or sentences from the script.  \n- The `imagePrompt` must describe the scene visually, reflecting the text exactly, without including any words, text, or letters.  \n- The `searchTerms` should be the same as the `imagePrompt`.\n- End each `imagePrompt` with: `ultra-realistic, 8K, cinematic, portrait 9:16`.  \n- Do NOT rewrite, summarize, or modify any text to fit a word count.  \n\n---\n\n### OUTPUT FORMAT\n\nYou must ONLY respond with valid JSON in this exact format:\n\n{\n  \"scenes\": [\n    {\n      \"text\": \"\",\n      \"imagePrompt\": \"\",\n      \"searchTerms\": \"\"\n    }\n  ],\n  \"config\": {\n    \"music\": \"MUSIC_MOOD\",\n    \"voice\": \"VOICE_NAME\",\n    \"orientation\": \"portrait\"\n  }\n}\n\n## AVAILABLE VOICES:\nam_adam, am_liam, bm_george\n\n## AVAILABLE MUSIC MOODS (MUST USE EXACT VALUES):\nsad, melancholic, happy, euphoric/high, excited, chill, uneasy, angry, dark, hopeful, contemplative, funny/quirky\n\n## IMPORTANT:\n- Respond ONLY with the JSON. No explanations or extra text.\n- Ensure the JSON is valid and properly formatted.\n- Do NOT wrap the JSON in any other object or tool call.\n- The `searchTerms` field is required and should match the `imagePrompt`."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -4816,
        16
      ],
      "id": "06dcf486-af7c-4907-9336-97ec6b2e9c60",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "meta-llama/llama-4-maverick:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -5216,
        336
      ],
      "id": "72a08205-7a71-49c9-b552-39dae820d8fe",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "Z0qdSGsCKeFZM9R5",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"scenes\": [\n    {\n      \"text\": \"Narration text for the scene (15-25 words).\",\n      \"imagePrompt\": \"A detailed, cinematic image prompt for FLUX. Describe the scene, lighting, and mood. End with 'ultra-realistic, 8K, cinematic, portrait 9:16'.\"\n    }\n  ],\n  \"config\": {\n    \"music\": \"MUSIC_MOOD\",\n    \"voice\": \"VOICE_NAME\",\n    \"orientation\": \"portrait\"\n  }\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -4624,
        320
      ],
      "id": "34bd02d2-9d57-4863-9758-4ec537c1ed4a",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b674fe0d-b8c0-4141-98f4-dad8f0d8aa0d",
              "name": "Script_Tone",
              "value": "UNFILTERED LIFE COACH - HARSH AND IN YOUR FACE",
              "type": "string"
            },
            {
              "id": "b3099542-7b43-403b-ad7c-f4182d803d90",
              "name": "Target_Word_Count",
              "value": "50",
              "type": "string"
            },
            {
              "id": "26f642b6-eaf1-447b-89df-9265e3193b67",
              "name": "TITLE",
              "value": "={{ $('Get row(s) in sheet').item.json.TITLE }}",
              "type": "string"
            },
            {
              "id": "33965433-feff-4245-9d14-18f45ad31364",
              "name": "ELEVENLABS_VOICE_ID",
              "value": "={{ $json.VOICE }}",
              "type": "string"
            },
            {
              "id": "d6450946-94cb-48ad-aec3-245e87bbcd7e",
              "name": "BACKGROUND_AUDIO_URL",
              "value": "https://drive.google.com/uc?export=download&id=1-g_ibAZj7fwncaLTdEzVBtewa_BlIJtX",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5632,
        16
      ],
      "id": "bd8a09fb-9abd-43c8-a146-e709801971c5",
      "name": "Set Global Variables1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.together.xyz/v1/images/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"black-forest-labs/FLUX.1-schnell-Free\",\n  \"prompt\": \"{{ $json.imagePrompt }}\",\n  \"width\": 720,\n  \"height\": 1280,\n  \"steps\": 4,\n  \"seed\": 1,\n  \"response_format\": \"url\",\n  \"output_format\": \"jpeg\"\n}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 5,
              "batchInterval": 2500
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3728,
        -368
      ],
      "id": "aec1413f-2b29-4407-9203-db28adf920c1",
      "name": "Generate Images Flux Free",
      "credentials": {
        "httpHeaderAuth": {
          "id": "JdfDCxKTwaEVNBKO",
          "name": "TOGETHER_API"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.data[0].url }}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4224,
        -320
      ],
      "id": "c97bd087-174d-4f9d-b56d-88d6f2b37224",
      "name": "Download Image"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -4048,
        96
      ],
      "id": "3a9d351e-5de3-470e-81e0-b8520b7cd017",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsCode": "// This is the most fundamental way to get data in n8n.\n// It retrieves the array of all incoming items, and we select the first one.\nconst firstItem = $input.all()[0];\n\n// Now we can safely get the JSON data from that item.\nconst agentData = firstItem.json;\n\n// This variable will hold our final array of scenes.\nlet scenesArray = [];\n\n// The rest of this logic is correct and will now work.\nif (agentData.output && agentData.output.scenes) {\n  scenesArray = agentData.output.scenes;\n} else if (agentData.scenes) {\n  scenesArray = agentData.scenes;\n}\n\n// If we successfully found a scenes array, return it.\nif (scenesArray && scenesArray.length > 0) {\n  return scenesArray;\n} else {\n  // If no scenes were found, stop with a clear error.\n  throw new Error(\"Could not find a 'scenes' array in the input data. Check the AI Agent output.\");\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4336,
        16
      ],
      "id": "b7454e63-ce54-481e-8c37-3503712de836",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "// This code assumes it's receiving binary image data from the Download Image node\n\nconst items = $input.all();\nconst output = [];\n\nitems.forEach((item, index) => {\n  const timestamp = Date.now();\n  const filename = `temp_scene_${index}_${timestamp}.jpg`;\n  const filepath = `/short_video_maker/images/${filename}`;\n\n  output.push({\n    json: {\n      ...item.json,\n      sceneIndex: index,\n      imageFilename: filename,\n      imagePath: filepath\n    },\n    binary: item.binary  // Ensure binary data is passed through for writing\n  });\n});\n\nreturn output;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3680,
        -16
      ],
      "id": "b921cec2-277a-4bce-81f7-531833216c47",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "// Bridge Code1 - Simplified Version\n// This node processes items coming from \"Read/Write Files from Disk\"\nconst allItems = $input.all();\n\n// Validation\nif (!allItems || allItems.length === 0) {\n  throw new Error(\"No items received from Read/Write Files node\");\n}\n\n// Get the original AI Agent output scenes\nconst originalAgentData = $('AI Agent').first().json.output;\n\n// Validation for AI Agent data\nif (!originalAgentData || !originalAgentData.scenes) {\n  throw new Error(\"Could not find scenes data from AI Agent node\");\n}\n\nconsole.log(`Processing ${allItems.length} items from file write operations`);\n\n// Process each item that was written to disk\nconst outputItems = allItems.map((item, index) => {\n  // Get the corresponding scene data from AI Agent\n  const sceneData = originalAgentData.scenes[index];\n  \n  if (!sceneData) {\n    throw new Error(`No scene data found for index ${index}`);\n  }\n\n  // Create output item with all necessary data (videoConfig removed)\n  return {\n    json: {\n      text: sceneData.text,\n      imagePrompt: sceneData.imagePrompt,\n      sceneIndex: index,\n      imagePath: item.json.imagePath,\n      imageFilename: item.json.imageFilename,\n    },\n    // Pass through binary data if it exists\n    ...(item.binary ? { binary: item.binary } : {})\n  };\n});\n\nconsole.log(`Bridge Code1 processed ${outputItems.length} items successfully`);\n\nreturn outputItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3008,
        -16
      ],
      "id": "f772dcb5-f8c3-4d50-b464-de6bda6aafe8",
      "name": "Bridge Code1"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "={{ $json.imagePath }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -3376,
        -16
      ],
      "id": "1f458487-b634-44f5-bd13-fd42f664265f",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1jlAIziQl3cFqugXsuMqduVc-6ArFwfHmyPjcAjjV2Gs",
          "mode": "list",
          "cachedResultName": "IUP - VIDEO IDEAS -N8N",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1jlAIziQl3cFqugXsuMqduVc-6ArFwfHmyPjcAjjV2Gs/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1jlAIziQl3cFqugXsuMqduVc-6ArFwfHmyPjcAjjV2Gs/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status",
              "lookupValue": "NEW"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -6096,
        16
      ],
      "id": "87aee5e3-3a6e-48ae-a4e0-f8e56c577a61",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=### PRIMARY DIRECTIVE\n\nYOUR ONLY OUTPUT MUST BE THE RAW, SPOKEN-WORD SCRIPT, WRITTEN IN FLAWLESS, STANDARD AMERICAN ENGLISH. PRODUCE NO HEADINGS, LABELS, TITLES, DIRECTOR'S NOTES, MARKDOWN, BOLDING, OR ITALICS OF ANY KIND. THE OUTPUT MUST BE PURE TEXT AND CONTAIN NO FOREIGN CHARACTERS.\n\n---\n\nYOU ARE AN AI MASTERMIND, specialized in creating high-impact, viral story scripts for social media.\nYour task is to generate a full, complete script based on the provided variables, adhering exactly to the specified word count.\n\nThe script must provide complete, actionable advice or a fully developed story. Do not give instructions or suggestions without explaining how to do them, and do not leave ideas unfinished. Every recommendation, tip, or concept must be fully explained and understandable to the viewer.\n\n---\n\n### Input Variables:\n\n* **TITLE**: The main topic to base the story script on.\n* **Script_Tone**: A detailed description of the desired tone and persona for the narration.\n* **Target_Word_Count**: The exact word count the final script must achieve.\n\n---\n\n### Script Generation Requirements:\n\n1.  **The HARD LIMIT: Word Count**: The **ABSOLUTE MOST IMPORTANT RULE** is the word count. The final script **MUST BE EXACTLY {{ $json.Target_Word_Count }} words.** This is a non-negotiable limit. Do not go over or under this number. If the story feels too short, you must creatively expand it. If it is too long, you must concisely rewrite it until it meets the target precisely.\n\n2.  **Topic Focus**: Generate a VIRAL story script based on the title: **{{ $json.TITLE }}**\n\n3.  **Narrative Structure**: The script's content must seamlessly integrate the following four elements in order, without ever labeling them:\n    * **A Scroll-Stopping Hook**: The first 1-2 sentences must be jaw-dropping or intensely curious.\n    * **An Escalating Flow**: The middle of the script must build suspense or intrigue. Maintain a punchy, in-your-face, informational flow with tight sentences to keep the viewer engaged.\n    * **A Shocking Twist**: Near the end, introduce a surprising turn or reveal that changes the story's meaning.\n    * **A Compelling CTA**: End the script with a powerful final line that includes a call to action matching the script's tone.\n\n4.  **Tone and Style**:\n    * The entire script must be written in the style of a(n) **{{ $json.Script_Tone }}**.\n    * Use simple, casual, spoken-style English.\n    * **TTS Optimization:** The script must be optimized for Text-to-Speech. Avoid all abbreviations and acronyms. For example, always write \"World War Two\" instead of \"WWII\".\n\n---\n\n### Final Review Protocol:\n\nBefore providing the output, perform a final word count check to confirm the script is **EXACTLY {{ $json.Target_Word_Count }}** words. This is a mandatory final step.\n\n---\n\n### Final Check:\n\nThe final output is ONLY the text of the script, meeting the exact word count. Nothing else.\n",
        "needsFallback": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -5264,
        16
      ],
      "id": "e11d7e8b-912d-4edc-a17e-a8b1d65a8c3d",
      "name": "Script Writer"
    },
    {
      "parameters": {
        "model": "meta-llama/llama-3.3-70b-instruct:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -4928,
        352
      ],
      "id": "5c1e4812-449d-4d8e-b5a6-7ef21849ed8d",
      "name": "OpenRouter Chat Model1",
      "credentials": {
        "openRouterApi": {
          "id": "Z0qdSGsCKeFZM9R5",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://image.pollinations.ai/prompt/{{ $json.imagePrompt }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "width",
              "value": "1000"
            },
            {
              "name": "height",
              "value": "1500"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3696,
        256
      ],
      "id": "57f62c60-5880-4340-8a13-8f0cb5b9a959",
      "name": "text to image"
    },
    {
      "parameters": {
        "jsCode": "// N8N Node: \"Format JSON2VIDEO Structure\"\n// This node no longer depends on videoConfig from the previous step.\n// Formats data to match JSON2VIDEO template structure\n\nconst allItems = $input.all();\n\nif (!allItems || allItems.length === 0) {\n  throw new Error(\"No items received from Bridge Code1\");\n}\n\n// Get global variables from n8n (set these in your \"Set Global Variables\" node)\nconst globalVars = $('Set Global Variables1').item.json;\nconst voiceId = globalVars.ELEVENLABS_VOICE_ID || \"2ajXGJNYBR0iNHpS4VZb\"; // Default voice\nconst backgroundAudioUrl = globalVars.BACKGROUND_AUDIO_URL || \"\"; // Optional background music URL\n\nconsole.log(`Formatting ${allItems.length} scenes for JSON2VIDEO clone`);\n\n// Build scenes array in JSON2VIDEO format\nconst scenes = [];\n\nfor (const [index, item] of allItems.entries()) {\n  // Skip scenes without an image path\n  if (!item.json.imagePath) {\n    console.warn(`Skipping scene ${index} - no image path`);\n    continue;\n  }\n\n  // Create scene in JSON2VIDEO format\n  scenes.push({\n    imageData: item.json.imagePath,\n    text: item.json.text,\n    voiceOverText: item.json.text,\n    imagePrompt: item.json.imagePrompt,\n    overlaidText: item.json.text.substring(0, 50) + \"...\", // Shortened for overlay\n    sceneIndex: index\n  });\n}\n\n// Create JSON2VIDEO-compatible structure\nconst json2videoConfig = {\n  id: \"n8n_generated\",\n  comment: \"Video created by n8n JSON2VIDEO clone\",\n  height: 1920,\n  width: 1080,\n  quality: \"medium\",\n  draft: false,\n  resolution: \"instagram-story\",\n  fps: 25,\n  cache: true,\n  \n  scenes: scenes,\n  \n  variables: {\n    voice: voiceId,\n    background_audio_url: backgroundAudioUrl,\n    scenes: scenes.map(scene => ({\n      overlaidText: scene.overlaidText,\n      voiceOverText: scene.voiceOverText,\n      imagePrompt: scene.imagePrompt\n    }))\n  },\n  \n  elements: [\n    ...(backgroundAudioUrl ? [{\n      id: \"background-music\",\n      type: \"audio\",\n      src: backgroundAudioUrl,\n      duration: -2,\n      \"fade-out\": 2,\n      volume: 0.2\n    }] : []),\n    \n    {\n      id: \"subtitles\",\n      type: \"subtitles\",\n      settings: {\n        \"font-family\": \"Oswald Bold\",\n        \"font-size\": 140,\n        \"outline-color\": \"#000000\",\n        \"outline-width\": 8,\n        \"position\": \"mid-bottom-center\"\n      },\n      language: \"auto\",\n      comment: \"Auto-generated subtitles\"\n    }\n  ]\n};\n\nconsole.log(`JSON2VIDEO structure created with ${scenes.length} scenes`);\nconsole.log(`Voice ID: ${voiceId}`);\nconsole.log(`Background Audio: ${backgroundAudioUrl || 'None'}`);\n\n// Return the formatted structure\nreturn [{\n  json: json2videoConfig\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2688,
        -16
      ],
      "id": "2b12ace8-dcbb-45ba-a7b8-78cbb9907c33",
      "name": "Format JSON2VIDEO Structure"
    },
    {
      "parameters": {
        "content": "# Voices\n## ROB - Gritty British Guy:\n### 2ajXGJNYBR0iNHpS4VZb\n## Deacon Deane - New American:\n### ZRhQAAUuJfgKYOWgHWbg\n## Declan Sage - Deep American:\n### kqVT88a5QfII1HNAEPTJ\n## James - Husky and Engaging:\n### EkK5I93UQWFDigLMpZcX\n## Vincent C. Michaels - Dramatic Storyteller:\n### n1PvBOwxb8X6m7tahp2h\n## Nathaniel C - Original Suspenseful British Guy:\n### AeRdCCKzvd23BpJoofzx\n",
        "height": 704,
        "width": 592
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5952,
        -528
      ],
      "id": "a7c99e41-90fc-48bb-a12b-310326fd99a2",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9580e6ae-7bd9-438d-8856-49be1efccd79",
              "name": "VOICE",
              "value": "n1PvBOwxb8X6m7tahp2h",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5888,
        16
      ],
      "id": "053d394c-4104-48ce-82f1-442ca742fc34",
      "name": "SET VOICE"
    },
    {
      "parameters": {
        "command": "cd /short_video_maker && python3 json2video_clone.py input.json"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1952,
        -16
      ],
      "id": "53b03262-5d6a-4dca-a682-b6587d3a655c",
      "name": "Execute Command"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/short_video_maker/input.json",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -2224,
        -32
      ],
      "id": "5d59476e-7232-4d03-8433-f3fc80f3bece",
      "name": "Read/Write Files from Disk2"
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2448,
        -32
      ],
      "id": "e15f7eed-ada9-4347-85b1-a388f0f2a931",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9 * * 1-5"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1056,
        352
      ],
      "id": "4dd0d16d-4346-45bc-8e18-12420b1a612b",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "url": "={{ $('Get row(s) in sheet1').item.json.MEDIA }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -256,
        352
      ],
      "id": "aa5e5047-0015-46bf-961f-8a9cb11ce70c",
      "name": "Download Video",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=- **Input Text Field**:{{ $json.Description }}\n\n- **style_tone**: NO-BS MOTIVATIONAL COACH",
        "hasOutputParser": true,
        "needsFallback": true,
        "messages": {
          "messageValues": [
            {
              "type": "=SystemMessagePromptTemplate",
              "message": "=You are an AI specialized in crafting high-impact, viral titles and descriptions optimized for TikTok Shorts, Instagram Reels, YouTube Shorts, and Facebook Reels. \n\nYou will receive a input containing informational fields which may be variably named (e.g., \"title\", \"script\", etc.).\n\nYour task is to dynamically detect and use the text field from the input to generate platform-specific content tailored to each platform’s unique style and audience engagement.\n\nThe **tone and style** of the output should be customizable based on a user-defined variable called `style_tone`. This variable specifies the persona or voice you should adopt when generating content (e.g., \"bossbaby\", \"motivational coach\", \"comedy sketch\", etc.).\n\n---\n\n### Input variables:\n\n- **Input Text Field**: The text to base your content on (captions, description, name etc). DO NOT JUST REPEAT EXACTLY WHAT IT SAYS.  \n- **style_tone**: A string indicating the desired voice/persona for the content.\n\n---\n\n### Platform-specific output requirements:\n\n1. **Instagram Reels**:  \n   - Description: Brief, visually descriptive, up to 5 hashtags, strong call-to-action.\n\n2. **YouTube Shorts**:  \n   - Title (max 50 chars): Direct, suspenseful, clickbait style.  \n   - Description: Concise, keyword-rich, with engagement prompts and up to 5 hashtags.\n\n3. **Facebook Reels**:   \n   - Description: Short, emotional hook encouraging reactions and up to 5 hashtags.\n\n4. **TikTok**:  \n   - Description: Creative, catchy, platform-appropriate and up to 5 hashtags.\n\n---\n\n### Output format:\n\nReturn strictly this JSON structure, adapting content tone according to `style_tone`:\n{\n  \"instagram\": {\n    \"description\": \"...\"\n  },\n  \"youtube\": {\n    \"title\": \"...\",\n    \"description\": \"...\"\n  },\n  \"facebook\": {\n    \"description\": \"...\"\n  },\n  \"tiktok\": {\n    \"description\": \"...\"\n  }\n}\n\n#Note \n- Return only the EXACT JSON Output and nothing else."
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -608,
        352
      ],
      "id": "e73f31ee-4fb7-4358-9a79-753bed99a6ce",
      "name": "Publishing Agent"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"instagram\": {\n    \"description\": \"...\"\n  },\n  \"youtube\": {\n    \"title\": \"...\",\n    \"description\": \"...\"\n  },\n  \"facebook\": {\n    \"description\": \"...\"\n  },\n  \"tiktok\": {\n    \"description\": \"...\"\n  }\n}\n\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -464,
        576
      ],
      "id": "42bcc3a8-05b7-4595-86e1-aa80c221823c",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "c087ebbf-22a5-45f4-82d5-ddabfd921889",
              "leftValue": "={{ $json.YOUTUBE }}",
              "rightValue": "DONE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "301baec8-c772-4042-bdc1-7d2d99f07043",
              "leftValue": "={{ $json.FACEBOOK }}",
              "rightValue": "DONE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "c7469347-06e8-4163-a280-d85ed47d167b",
              "leftValue": "={{ $json.INSTAGRAM }}",
              "rightValue": "DONE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "a216f3c7-76f0-4bdb-89c6-e9e0dd389ce5",
              "leftValue": "={{ $json.TIKTOK }}",
              "rightValue": "DONE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1392,
        336
      ],
      "id": "3856e0ef-e7da-4cae-894f-442c86ec72ea",
      "name": "If"
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "upload",
        "title": "={{ $('Publishing Agent').item.json.output.youtube.title }}",
        "regionCode": "US",
        "categoryId": "24",
        "options": {
          "description": "={{ $('Publishing Agent').item.json.output.youtube.description }}",
          "privacyStatus": "public"
        }
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        336,
        48
      ],
      "id": "5f295ffe-7beb-48eb-833c-96dc841876a2",
      "name": "Youtube Post",
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "EMozQ7Zjgr2K5XmT",
          "name": "YouTube INNER UPGRADE DAILY"
        }
      }
    },
    {
      "parameters": {
        "content": "## Insta Agent",
        "height": 368,
        "width": 180,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        448,
        224
      ],
      "id": "fbcbac30-58df-42a7-83df-4ec1d7f86ab5",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## FB Agent",
        "height": 368,
        "width": 164,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        288,
        224
      ],
      "id": "5da14c87-8576-44d1-9b4f-c6943c046687",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "## TikTok Agent - TO ZAP",
        "height": 220,
        "width": 340
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        288,
        592
      ],
      "id": "7e6fbe7a-0741-4df3-a802-2144688ff63d",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "numberInputs": 4,
        "options": {
          "includeUnpaired": true
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1184,
        304
      ],
      "id": "fcfd289a-45d0-4cf3-949f-7e61a121b67c",
      "name": "Merge"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k",
          "mode": "list",
          "cachedResultName": "IUP DAILY N8N RUN",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1613208201,
          "mode": "list",
          "cachedResultName": "MASTER",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit#gid=1613208201"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "YOUTUBE": "DONE",
            "row_number": "={{ $('Get row(s) in sheet1').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TEXT",
              "displayName": "TEXT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "MEDIA",
              "displayName": "MEDIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "PUBLIC?",
              "displayName": "PUBLIC?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "YOUTUBE",
              "displayName": "YOUTUBE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FACEBOOK",
              "displayName": "FACEBOOK",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "INSTAGRAM",
              "displayName": "INSTAGRAM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TIKTOK",
              "displayName": "TIKTOK",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "THREADS",
              "displayName": "THREADS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ERROR?",
              "displayName": "ERROR?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        736,
        48
      ],
      "id": "88f567ab-968a-4003-92a7-903223b61f72",
      "name": "UPDATE YOUTUBE COLUMN",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k",
          "mode": "list",
          "cachedResultName": "IUP DAILY N8N RUN",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1613208201,
          "mode": "list",
          "cachedResultName": "MASTER",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit#gid=1613208201"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "FACEBOOK": "DONE",
            "row_number": "={{ $('Get row(s) in sheet1').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TEXT",
              "displayName": "TEXT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "MEDIA",
              "displayName": "MEDIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "PUBLIC?",
              "displayName": "PUBLIC?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "YOUTUBE",
              "displayName": "YOUTUBE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FACEBOOK",
              "displayName": "FACEBOOK",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "INSTAGRAM",
              "displayName": "INSTAGRAM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TIKTOK",
              "displayName": "TIKTOK",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "THREADS",
              "displayName": "THREADS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ERROR?",
              "displayName": "ERROR?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        736,
        288
      ],
      "id": "d0aa5ac2-4a71-4226-bfbb-211f582977a6",
      "name": "UPDATE FB COLUMN",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k",
          "mode": "list",
          "cachedResultName": "IUP DAILY N8N RUN",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1613208201,
          "mode": "list",
          "cachedResultName": "MASTER",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit#gid=1613208201"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "INSTAGRAM": "DONE",
            "row_number": "={{ $('Get row(s) in sheet1').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TEXT",
              "displayName": "TEXT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "MEDIA",
              "displayName": "MEDIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "PUBLIC?",
              "displayName": "PUBLIC?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "YOUTUBE",
              "displayName": "YOUTUBE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FACEBOOK",
              "displayName": "FACEBOOK",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "INSTAGRAM",
              "displayName": "INSTAGRAM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TIKTOK",
              "displayName": "TIKTOK",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "THREADS",
              "displayName": "THREADS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ERROR?",
              "displayName": "ERROR?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        736,
        448
      ],
      "id": "9f5273ba-2e1c-4a57-8456-0503375c628a",
      "name": "UPDATE INSTA COLUMN",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k",
          "mode": "list",
          "cachedResultName": "IUP DAILY N8N RUN",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1613208201,
          "mode": "list",
          "cachedResultName": "MASTER",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit#gid=1613208201"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "TIKTOK": "DONE",
            "row_number": "={{ $('Get row(s) in sheet1').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TEXT",
              "displayName": "TEXT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "MEDIA",
              "displayName": "MEDIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "PUBLIC?",
              "displayName": "PUBLIC?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "YOUTUBE",
              "displayName": "YOUTUBE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FACEBOOK",
              "displayName": "FACEBOOK",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "INSTAGRAM",
              "displayName": "INSTAGRAM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TIKTOK",
              "displayName": "TIKTOK",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "THREADS",
              "displayName": "THREADS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ERROR?",
              "displayName": "ERROR?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        736,
        640
      ],
      "id": "83e49cc3-f23d-4a5c-836f-0db76aa9756b",
      "name": "UPDATE TIKTOK COLUMN",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k",
          "mode": "list",
          "cachedResultName": "IUP DAILY N8N RUN",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1613208201,
          "mode": "list",
          "cachedResultName": "MASTER",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit#gid=1613208201"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Status": "POSTED",
            "row_number": "={{ $('Get row(s) in sheet1').item.json.row_number }}",
            "ERROR?": "NONE"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "TEXT",
              "displayName": "TEXT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "MEDIA",
              "displayName": "MEDIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "PUBLIC?",
              "displayName": "PUBLIC?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "YOUTUBE",
              "displayName": "YOUTUBE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "FACEBOOK",
              "displayName": "FACEBOOK",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "INSTAGRAM",
              "displayName": "INSTAGRAM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "TIKTOK",
              "displayName": "TIKTOK",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "THREADS",
              "displayName": "THREADS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ERROR?",
              "displayName": "ERROR?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1696,
        320
      ],
      "id": "ff6d79db-c762-4d34-8f71-e490d8cd85f7",
      "name": "SUCCESS",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k",
          "mode": "list",
          "cachedResultName": "IUP DAILY N8N RUN",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1613208201,
          "mode": "list",
          "cachedResultName": "MASTER",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit#gid=1613208201"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ERROR?": "ERROR",
            "row_number": "={{ $json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "TEXT",
              "displayName": "TEXT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "MEDIA",
              "displayName": "MEDIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "PUBLIC?",
              "displayName": "PUBLIC?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "YOUTUBE",
              "displayName": "YOUTUBE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "FACEBOOK",
              "displayName": "FACEBOOK",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "INSTAGRAM",
              "displayName": "INSTAGRAM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "TIKTOK",
              "displayName": "TIKTOK",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "THREADS",
              "displayName": "THREADS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ERROR?",
              "displayName": "ERROR?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1664,
        608
      ],
      "id": "d0d7358a-5cde-4f08-8cfa-8fbcad823e5d",
      "name": "ERROR",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "### SUCCESSFUL\n",
        "height": 220,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1632,
        256
      ],
      "id": "8126867d-560e-44e5-9301-7370866d2234",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Error",
        "height": 220,
        "width": 460,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1632,
        544
      ],
      "id": "519edfb4-cf93-4938-8e3c-bb65981a685b",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "chatId": "7439997846",
        "text": "=⚠️ *Workflow Alert: Post Failure*\nVIDEO: {{ $('Append row in sheet').item.json.TITLE }}\nTIKTOK: {{ $('If').item.json.TIKTOK }}\nYOUTUBE: {{ $('If').item.json.YOUTUBE }}\nFB: {{ $('If').item.json.FACEBOOK }}\nINSTA: {{ $('If').item.json.INSTAGRAM }}\n\n{{ $workflow.name }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1872,
        608
      ],
      "id": "9c5a1e82-82eb-4004-88b2-0a8011ae573f",
      "name": "Send a text message",
      "webhookId": "c6551412-2e09-462a-8049-b899b955d445",
      "credentials": {
        "telegramApi": {
          "id": "HHgbp1SZSR5uC5wr",
          "name": "Telegram account - ALERTS"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        480,
        448
      ],
      "id": "75343197-7079-4e9b-baf5-3e20f57a8ac7",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "date": "={{ $now }}",
        "posts": {
          "post": [
            {
              "integrationId": "={{ $json.Facebook }}",
              "value": {
                "contentItem": [
                  {
                    "content": "={{ $('Publishing Agent').item.json.output.facebook.description }}",
                    "image": {
                      "imageItem": [
                        {
                          "id": "={{ $('Postiz').item.json.id }}",
                          "path": "={{ $('Postiz').item.json.path }}"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "integrationId": "={{ $json.Instagram }}",
              "settings": {
                "setting": [
                  {
                    "key": "post_type",
                    "stringValue": "post"
                  }
                ]
              },
              "value": {
                "contentItem": [
                  {
                    "content": "={{ $('Publishing Agent').item.json.output.instagram.description }}",
                    "image": {
                      "imageItem": [
                        {
                          "id": "={{ $('Postiz').item.json.id }}",
                          "path": "={{ $('Postiz').item.json.path }}"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-postiz.postiz",
      "typeVersion": 1,
      "position": [
        320,
        448
      ],
      "id": "af728472-f5e1-4a3d-a43f-18689c69bd4b",
      "name": "Postiz4",
      "credentials": {
        "postizApi": {
          "id": "w48sNDeInJhYBUtQ",
          "name": "Postiz WTF Kreative"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k",
          "mode": "list",
          "cachedResultName": "IUP DAILY N8N RUN",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1109176401,
          "mode": "list",
          "cachedResultName": "TIKTOK ZAP",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit#gid=1109176401"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "DESC": "={{ $('Publishing Agent').item.json.output.tiktok.description }}",
            "DATE": "={{ $now }}",
            "TITLE": "={{ $('Get row(s) in sheet1').item.json.Description }}",
            "URL": "={{ $('Get row(s) in sheet1').item.json.MEDIA }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "DATE",
              "displayName": "DATE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TITLE",
              "displayName": "TITLE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "DESC",
              "displayName": "DESC",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        336,
        640
      ],
      "id": "af9bbf24-af62-48cf-853d-c49e3f5a3625",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "88612fe5-9484-4237-986d-6230a62aa083",
              "name": "Facebook",
              "value": "cmffissqd0003rw7ft26fagu6",
              "type": "string"
            },
            {
              "id": "26eea580-acd3-4d0a-93d6-1052021ddd9f",
              "name": "Instagram",
              "value": "cmffixlzl0009rw7ff339t01y",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        480,
        288
      ],
      "id": "90237981-5d81-4402-bfb9-798fd6b02f4a",
      "name": "Channel IDs - IUP"
    },
    {
      "parameters": {
        "operation": "uploadFile",
        "binaryProperty": "={{ $('Download Video').item.binary }}"
      },
      "type": "n8n-nodes-postiz.postiz",
      "typeVersion": 1,
      "position": [
        320,
        288
      ],
      "id": "a5c84145-5b5d-4ece-8404-864c369791fe",
      "name": "Postiz",
      "credentials": {
        "postizApi": {
          "id": "w48sNDeInJhYBUtQ",
          "name": "Postiz WTF Kreative"
        }
      }
    },
    {
      "parameters": {
        "content": "# S\n# H\n# E\n# E\n# T \n# S \n\n\n\n\n# U\n# P\n# D\n# A\n# T \n# E ",
        "height": 816,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        640,
        -16
      ],
      "id": "3cf193ab-ab76-4683-8570-2f979cadd69c",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "model": "meta-llama/llama-4-maverick:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -672,
        576
      ],
      "id": "c65e5955-1f20-45f4-bb7a-8c1501db0448",
      "name": "openrouter",
      "credentials": {
        "openRouterApi": {
          "id": "Z0qdSGsCKeFZM9R5",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k",
          "mode": "list",
          "cachedResultName": "IUP DAILY N8N RUN",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1613208201,
          "mode": "list",
          "cachedResultName": "MASTER",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tmUML753ZwlTn6Hee_6aZyqx-i6CIj1AffSnadBng9k/edit#gid=1613208201"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status",
              "lookupValue": "READY"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -832,
        352
      ],
      "id": "d0af93a2-7e12-4e9e-8110-64507f59713c",
      "name": "Get row(s) in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Youtube Agent\n",
        "height": 220,
        "width": 340,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        288,
        -16
      ],
      "id": "0e9b05e6-6de4-447b-be65-23af3dbb52fb",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "model": "meta-llama/llama-3.3-70b-instruct:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -592,
        704
      ],
      "id": "da0d0577-8c33-47ca-94af-ecad995f6d11",
      "name": "OpenRouter Chat Model2",
      "credentials": {
        "openRouterApi": {
          "id": "Z0qdSGsCKeFZM9R5",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -1584,
        -16
      ],
      "id": "a8771274-6154-4a3e-a591-0b550146dbb1",
      "name": "Read/Write Files from Disk1"
    }
  ],
  "pinData": {
    "Manual Trigger": [
      {
        "json": {}
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-13T16:38:15.667Z",
      "updatedAt": "2025-09-13T16:38:15.667Z",
      "role": "workflow:owner",
      "workflowId": "t6cpYYvfb6b2SlMs",
      "projectId": "aYesZFcPjHzYQyLq"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-02T18:56:26.268Z",
      "updatedAt": "2025-08-02T18:56:26.268Z",
      "id": "nnDA7isE4OxnQFwX",
      "name": "Development"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-09-19T12:10:44.953Z",
  "versionId": "6a9ab2f8-b48e-4647-9a3e-68f8f370a693"
}