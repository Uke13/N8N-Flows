{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "YouTube Video Scrape",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Find Duplicate Entries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube Video Scrape": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Duplicate Entries": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube Title Generator": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Thumbnail": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "YouTube Title Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Outline Generator": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Analyze Thumbnail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Find Duplicate Entries1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Step 1 Results1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Step 1 Results1": {
      "main": [
        [
          {
            "node": "Analyze Thumbnail1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Duplicate Entries1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube Title Generator1": {
      "main": [
        [
          {
            "node": "Outline Generator1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Thumbnail1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube Video Scrape1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "YouTube Title Generator1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Outline Generator1": {
      "main": [
        [
          {
            "node": "Update Rows1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "YouTube Video Scrape1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Outline Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Update Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-16T20:40:30.721Z",
  "id": "HkYrofFe5ItZIue7",
  "isArchived": false,
  "meta": null,
  "name": "Youtube Competition Analyzer",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "9347d3a9-a279-41a4-8e01-bb30fe62aa5a",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        680
      ],
      "id": "f6e6772a-3d87-4fb3-b55e-76bd07ff984c",
      "name": "Webhook",
      "webhookId": "9347d3a9-a279-41a4-8e01-bb30fe62aa5a"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/h7sDV53CddomktSi5/run-sync-get-dataset-items",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer API KEY"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"dateFilter\": \"month\",\n  \"downloadSubtitles\": false,\n  \"hasCC\": false,\n  \"hasLocation\": false,\n  \"hasSubtitles\": false,\n  \"is360\": false,\n  \"is3D\": false,\n  \"is4K\": false,\n  \"isBought\": false,\n  \"isHD\": false,\n  \"isHDR\": false,\n  \"isLive\": false,\n  \"isVR180\": false,\n  \"maxResultStreams\": 0,\n  \"maxResults\": 100,\n  \"maxResultsShorts\": 0,\n  \"preferAutoGeneratedSubtitles\": false,\n  \"saveSubsToKVS\": false,\n  \"scrapeLastNDays\": 60,\n  \"startUrls\": [\n        {\n            \"url\": \"{{ $json.body.URL }}\",\n            \"method\": \"GET\"\n        }\n  ],\n  \"sortVideosBy\": \"NEWEST\",\n  \"sortingOrder\": \"date\",\n  \"videoType\": \"video\"\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        380,
        680
      ],
      "id": "71da8b0a-3fe5-4343-87ec-dc8f5b6a3cb4",
      "name": "YouTube Video Scrape"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a179d690-a6da-41ef-9ca4-7346864f7233",
              "leftValue": "={{ $json.viewCount }}",
              "rightValue": "={{ ($json.channelTotalViews / $json.channelTotalVideos) * 1.2 }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        660,
        680
      ],
      "id": "6d3648a4-137e-4cf9-a9eb-16e47f46e888",
      "name": "If"
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "id",
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input2",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1200,
        640
      ],
      "id": "68e3823c-6ae9-4bf1-bd65-7904e73267f7",
      "name": "Merge"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA",
          "mode": "list",
          "cachedResultName": "YouTube Analysis",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 9266351,
          "mode": "list",
          "cachedResultName": "Competitor",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA/edit#gid=9266351"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "id",
              "lookupValue": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        880,
        520
      ],
      "id": "247ffc77-4311-4f94-bf6f-7327182cfd84",
      "name": "Find Duplicate Entries",
      "executeOnce": false,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "5619da67-90db-4e48-903e-8f9bd4c982f3",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        1140
      ],
      "id": "cc0c7b87-c2ed-44a0-a9c3-50956d59594e",
      "name": "Webhook1",
      "webhookId": "5619da67-90db-4e48-903e-8f9bd4c982f3"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Video Title: {{ $json.title }}\nThumbnail Description: {{ $('Analyze Thumbnail').item.json.choices[0].message.content }}"
            },
            {
              "content": "=# Title Analysis & Generation Prompt\n\n## Overview  \nYou are an AI agent responsible for analyzing successful YouTube video titles and generating multiple title variations that use the same proven formula but with different angles and keywords.\n\n## Context  \n- You will receive a successful video title from a high-performing video and thumbnail description\n- Your goal is to identify the specific title formula/pattern used\n- Then generate 5 title variations using that same pattern but with different angles\n- Also generate appropriate thumbnail text that complements the visual style\n- This allows the content creator to apply proven title formulas to their own content\n\n## Instructions  \n1. **Analyze the Successful Title**: Break down the structure and identify the formula\n2. **Categorize the Pattern**: Classify the title type used\n3. **Explain Why It Works**: Identify the psychological trigger or appeal\n4. **Generate Title Variations**: Create 5 different titles using the same pattern but different angles\n5. **Generate Thumbnail Text**: Create 3-5 word thumbnail text that complements the visual style and supports the title variations\n\n## Title Pattern Categories:\n- **How-To Formula**: \"How to [achieve result] in [timeframe]\"\n- **Number/List**: \"[Number] [things] that [outcome]\"\n- **Secret/Unknown**: \"[Number] [secrets/hacks] [authority figure] doesn't want you to know\"\n- **Transformation**: \"From [bad state] to [good state] in [timeframe]\"\n- **Mistake/Warning**: \"[Number] mistakes that [negative outcome]\"\n- **Comparison**: \"[Option A] vs [Option B]: Which is better?\"\n- **Question/Curiosity**: \"Why [surprising fact]?\"\n- **Authority/Celebrity**: \"What [famous person] taught me about [topic]\"\n\n## Output Format:\n```json\n{\n  \"originalTitle\": \"Exact title from the successful video\",\n  \"titlePattern\": \"Pattern category and structure breakdown\",\n  \"whyItWorks\": \"Psychological reason this pattern attracts clicks\",\n  \"keyElements\": [\"element1\", \"element2\", \"element3\"],\n  \"thumbnailText\": \"3-5 word text that complements the thumbnail visual style\",\n  \"titleVariations\": [\n    {\n      \"angle\": \"Beginner Focus\",\n      \"title\": \"Title variation #1 using same pattern\"\n    },\n    {\n      \"angle\": \"Advanced/Expert\",\n      \"title\": \"Title variation #2 using same pattern\"\n    },\n    {\n      \"angle\": \"Time-Sensitive\",\n      \"title\": \"Title variation #3 using same pattern\"\n    },\n    {\n      \"angle\": \"Problem-Focused\",\n      \"title\": \"Title variation #4 using same pattern\"\n    },\n    {\n      \"angle\": \"Benefit-Focused\",\n      \"title\": \"Title variation #5 using same pattern\"\n    }\n  ]\n}\n```\n\n## Tools  \n- Original Video Title: `{{ $json.title }}`\n- Thumbnail Description: '{{ $('Analyze Thumbnail').item.json.choices[0].message.content }}'\n\n## SOP (Standard Operating Procedure)  \n1. Analyze the successful title structure and identify the pattern\n2. Break down the key elements that make it work\n3. Identify the psychological appeal or trigger\n4. Analyze the thumbnail description to understand the visual style and tone\n5. Generate 5 title variations using the same formula but different angles\n6. Create thumbnail text (3-5 words) that aligns with the visual style and supports the titles\n7. Ensure each variation maintains the structure while targeting different audiences or pain points\n8. Keep titles under 60 characters when possible for mobile optimization\n9. Return the analysis in the specified JSON format\n\n## Final Notes  \n- Focus on replicating the structure, not just changing words\n- Each variation should use the proven formula but feel fresh\n- Provide diverse angles so the creator can match their audience\n- Maintain the psychological triggers that made the original successful\n- Test different emotional appeals (urgency, curiosity, authority, etc.)",
              "role": "system"
            }
          ]
        },
        "simplify": false,
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        820,
        1140
      ],
      "id": "025eac3a-c7e8-4b67-9974-64cadbedc403",
      "name": "YouTube Title Generator"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=# Overview  \nYou are an AI agent responsible for analyzing a YouTube thumbnail via a provided URL and generating a single, well-written **natural language description** that captures the visual style, layout, and tone of the thumbnail. This description will be used as part of an image generation prompt to recreate a similarly styled thumbnail.\n\n## Context  \n- The agent uses OpenAI’s image understanding capabilities to visually analyze YouTube thumbnails.  \n- The goal is to create a **descriptive text output** that reflects the design, mood, and layout of the thumbnail — not to copy the content directly.  \n- The output should be a standalone sentence or paragraph in natural language, ready to be embedded in a larger prompt.\n\n## Instructions  \n1. Retrieve and analyze the thumbnail image from the given YouTube URL.  \n2. Identify and describe the following elements:\n   - Overall layout and composition  \n   - Character or subject placement (if applicable)  \n   - Background type and visual treatment  \n   - Font and text style, including content if legible  \n   - Dominant color palette and mood  \n3. Compose a fluent, single-string natural language description of the thumbnail.  \n4. The output should read like part of a prompt, e.g., \"An energetic YouTube thumbnail showing...\"  \n5. Do not include any structured formatting (like JSON, lists, or metadata).  \n\n## Tools  \n- OpenAI Image Understanding Node  \n\n## Examples  \n- **Input:**  \n  `https://i.ytimg.com/vi/HpkZU34fqUM/maxresdefault.jpg`  \n- **Output:**  \n  A high-energy YouTube thumbnail featuring a surprised man on the right side, with a bold red radial gradient background. Large comic-style yellow text appears on the left, creating a dramatic and urgent visual tone.\n\n- **Input:**  \n  `https://i.ytimg.com/vi/abc123xyz/default.jpg`  \n- **Output:**  \n  A clean, professional thumbnail showing a laptop with a blurred tech-themed background. Soft blue and gray tones dominate the scene, with sleek sans-serif text centered above the device.\n\n## SOP (Standard Operating Procedure)  \n1. Validate the provided YouTube thumbnail URL.  \n2. Retrieve the image and perform visual analysis using image capabilities.  \n3. Extract and synthesize details about layout, colors, subjects, and visual emphasis.  \n4. Write a **natural language description** that feels prompt-ready, descriptive, and cohesive.  \n5. Return only the final descriptive sentence or paragraph — no metadata, formatting, or JSON.\n\n## Final Notes  \n- Do not refer to brand names, creators, or exact text unless it's generic and descriptive.  \n- Focus on tone, layout, and composition to support style transfer, not replication.  \n- The description should serve as a high-quality visual summary usable in generative models.\n---",
        "imageUrls": "={{ $json.body.thumbnailUrl }}",
        "simplify": false,
        "options": {
          "detail": "high"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        360,
        1140
      ],
      "id": "36f3cd1e-0e86-482d-b153-781dc22c0a49",
      "name": "Analyze Thumbnail"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA",
          "mode": "list",
          "cachedResultName": "YouTube Analysis",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 9266351,
          "mode": "list",
          "cachedResultName": "Competitor",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA/edit#gid=9266351"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Webhook1').item.json.body.id }}",
            "thumbnailDescription": "={{ $('Analyze Thumbnail').item.json.choices[0].message.content }}",
            "Hook Variations": "={{ $json.hookVariation }}",
            "Why Hook Works": "={{ $json.whyHookWorks }}",
            "Hook Pattern": "={{ $json.hookPattern }}",
            "Original Hook": "={{ $json.originalHook }}",
            "New Titles": "={{ $('Code').item.json.titleVariations }}",
            "Why Title Works": "={{ $('Code').item.json.whyItWorks }}",
            "Title Pattern": "={{ $('Code').item.json.titlePattern }}",
            "thumbnailText": "={{ $('Code').item.json.thumbnailText }}",
            "Video Summary": "={{ $json.videoSummary }}",
            "video Transcript": "={{ $('HTTP Request').item.json.captions }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "channelName",
              "displayName": "channelName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "thumbnailUrl",
              "displayName": "thumbnailUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "duration",
              "displayName": "duration",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "viewCount",
              "displayName": "viewCount",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "likes",
              "displayName": "likes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "comments",
              "displayName": "comments",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "numberOfSubscribers",
              "displayName": "numberOfSubscribers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Generate New Video",
              "displayName": "Generate New Video",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "video Transcript",
              "displayName": "video Transcript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Video Summary",
              "displayName": "Video Summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "thumbnailDescription",
              "displayName": "thumbnailDescription",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "thumbnailText",
              "displayName": "thumbnailText",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Title Pattern",
              "displayName": "Title Pattern",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Why Title Works",
              "displayName": "Why Title Works",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "New Titles",
              "displayName": "New Titles",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Original Hook",
              "displayName": "Original Hook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook Pattern",
              "displayName": "Hook Pattern",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Why Hook Works",
              "displayName": "Why Hook Works",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook Variations",
              "displayName": "Hook Variations",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2140,
        1140
      ],
      "id": "969f681c-a917-4d9b-8102-7450d14912f9",
      "name": "Update Rows"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/1s7eXiaukVuOr4Ueg/run-sync-get-dataset-items",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer API KEY"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"channelHandleBoolean\": true,\n  \"channelIDBoolean\": false,\n  \"channelNameBoolean\": true,\n  \"commentsBoolean\": false,\n  \"datePublishedBoolean\": false,\n  \"dateTextBoolean\": false,\n  \"descriptionBoolean\": false,\n  \"keywordsBoolean\": true,\n  \"likesBoolean\": false,\n  \"maxRetries\": 8,\n  \"outputFormat\": \"singleStringText\",\n  \"proxyOptions\": {\n    \"useApifyProxy\": true,\n    \"apifyProxyGroups\": []\n  },\n  \"relativeDateTextBoolean\": false,\n  \"subscriberCountBoolean\": false,\n  \"thumbnailBoolean\": false,\n  \"uploadDateBoolean\": false,\n  \"urls\": [\n    \"{{ $('Webhook1').item.json.body.url }}\"\n  ],\n  \"viewCountBoolean\": false\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        600,
        1140
      ],
      "id": "ea936270-3665-44bb-b7d9-dd75c2e8f839",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "GPT-4.1"
        },
        "messages": {
          "values": [
            {
              "content": "=# Hook Analysis Prompt\n\n## Overview  \nYou are an AI agent responsible for analyzing YouTube video transcripts to extract hook patterns and generate a single 30-60 second hook variation using the same proven formula with retention techniques.\n\n## Context\nHooks should use proven psychological patterns and include retention techniques like open loops, value previews, story teasers, and curiosity gaps to maximize engagement.\n\n## Hook Pattern Categories:\n- **Personal Story**: \"I learned this from [person/experience]...\"\n- **Bold Claim**: \"Most people get [topic] completely wrong...\"\n- **Curiosity Gap**: \"The reason [outcome] isn't what you think...\"\n- **Social Proof**: \"After [doing X] for [Y years]...\"\n- **Contrarian Take**: \"Everyone says [common belief], but...\"\n- **Secret/Insider**: \"Here's what [industry] doesn't want you to know...\"\n- **Mistake/Failure**: \"I lost [amount/something] because...\"\n- **Before/After**: \"This changed everything about how I...\"\n\n## Retention Techniques to Include:\n- **Open Loops**: Tease future reveals (\"I'll show you the #1 mistake at the end...\")\n- **Value Previews**: Tell viewers what they'll gain (\"By the end, you'll know exactly how to...\")\n- **Story Teasers**: Preview compelling stories (\"I'll tell you about the time I lost $10K...\")\n- **Social Proof**: Include concrete results/numbers\n- **Curiosity Gaps**: Create knowledge gaps that demand resolution\n\n## Instructions  \n1. **Summarize the video**: What does the original transcript actually cover?\n2. **Extract the Hook**: Identify the exact opening lines (first 15-30 seconds)\n3. **Categorize the Pattern**: Classify the hook type used from the categories above\n4. **Explain Why It Works**: Psychological reason this pattern engages viewers\n5. **Generate One Hook Variation**: Create a single 30-60 second hook using the same pattern + retention techniques\n\n## Output Format:\n```json\n{\n  \"videoSummary\": \"Summary of what the original video transcript covers\",\n  \"originalHook\": \"Exact opening lines from the transcript\",\n  \"hookPattern\": \"Category name and brief explanation\", \n  \"whyHookWorks\": \"Psychological reason this pattern engages viewers\",\n  \"hookVariation\": \"Single 30-60 second hook using the same pattern with retention techniques\"\n}\n```\n\n## Tools  \n- Video Transcript: `{{ $('HTTP Request').item.json.captions }}`\n\n## Final Notes  \n- Video summary should describe the original content, not your variation\n- Hook variation should be 30-60 seconds of actual script with multiple retention techniques\n- Use the proven pattern categories and include open loops, value previews, or story teasers\n- Focus on replicating the psychological pattern that worked while adding retention elements",
              "role": "system"
            },
            {
              "content": "=Video Transcript: {{ $('HTTP Request').item.json.captions }}"
            }
          ]
        },
        "simplify": false,
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1440,
        1140
      ],
      "id": "d0bf2593-7da8-4e50-93bf-a842f22703e2",
      "name": "Outline Generator"
    },
    {
      "parameters": {
        "content": "## YouTube Asset Creation (Title, Script)",
        "width": 360
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -20,
        960
      ],
      "typeVersion": 1,
      "id": "acde91aa-6ef2-4cb7-8d2e-e7290e03216c",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## YouTube Creator Search (URL)",
        "width": 400
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -20,
        480
      ],
      "typeVersion": 1,
      "id": "718f68d5-8454-4ab7-a6c7-c2413b230c24",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a179d690-a6da-41ef-9ca4-7346864f7233",
              "leftValue": "={{ $json.viewCount }}",
              "rightValue": 1000,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            },
            {
              "id": "b66e2013-6fc7-414d-bf7b-5c6c7e23bcae",
              "leftValue": "={{ $json.viewCount }}",
              "rightValue": "={{ $json.numberOfSubscribers }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        540,
        220
      ],
      "id": "8384d254-709b-4e99-bef3-624d53d5a0e5",
      "name": "If1"
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "id",
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input2",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1080,
        200
      ],
      "id": "135290b0-02fc-4e71-a585-4fc9749f9760",
      "name": "Merge1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA",
          "mode": "list",
          "cachedResultName": "YouTube Analysis",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 9266351,
          "mode": "list",
          "cachedResultName": "Competitor",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA/edit#gid=9266351"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "viewCount": "={{ $('If1').item.json.viewCount }}",
            "numberOfSubscribers": "={{ $('If1').item.json.numberOfSubscribers }}",
            "likes": "={{ $('If1').item.json.likes }}",
            "id": "={{ $json.id }}",
            "title": "={{ $('If1').item.json.title }}",
            "url": "={{ $('If1').item.json.url }}",
            "channelName": "={{ $('If1').item.json.channelName }}",
            "duration": "={{ $('If1').item.json.duration }}",
            "thumbnailUrl": "={{ $('If1').item.json.thumbnailUrl }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "channelName",
              "displayName": "channelName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "thumbnailUrl",
              "displayName": "thumbnailUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "duration",
              "displayName": "duration",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "viewCount",
              "displayName": "viewCount",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "likes",
              "displayName": "likes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "comments",
              "displayName": "comments",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "numberOfSubscribers",
              "displayName": "numberOfSubscribers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Generate New Video",
              "displayName": "Generate New Video",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "video Transcript",
              "displayName": "video Transcript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Video Summary",
              "displayName": "Video Summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "thumbnailDescription",
              "displayName": "thumbnailDescription",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "thumbnailText",
              "displayName": "thumbnailText",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Title Pattern",
              "displayName": "Title Pattern",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Why Title Works",
              "displayName": "Why Title Works",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "New Titles",
              "displayName": "New Titles",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Original Hook",
              "displayName": "Original Hook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook Pattern",
              "displayName": "Hook Pattern",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Why Hook Works",
              "displayName": "Why Hook Works",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook Variations",
              "displayName": "Hook Variations",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1280,
        220
      ],
      "id": "586b5343-15b2-4d8e-904d-dd75cdc117ca",
      "name": "Step 1 Results1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA",
          "mode": "list",
          "cachedResultName": "YouTube Analysis",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 9266351,
          "mode": "list",
          "cachedResultName": "Competitor",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA/edit#gid=9266351"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        820,
        100
      ],
      "id": "67bd35f7-2c73-45b2-b01e-6c546fbfdfaa",
      "name": "Find Duplicate Entries1",
      "executeOnce": false,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Video Title: {{ $('Step 1 Results1').item.json.title }}\nThumbnail Description: {{ $('Analyze Thumbnail1').item.json.choices[0].message.content }}\nVideo Transcript: {{ $('HTTP Request1').item.json.captions }}"
            },
            {
              "content": "=# Overview  \nYou are an AI agent responsible for generating an optimized YouTube video title and corresponding thumbnail text based on an original title, visual thumbnail analysis, and video transcript. Your goal is to retain the original message while improving clarity, engagement, and visual storytelling.\n\n## Context  \n- You will receive:\n  - The original video title  \n  - A natural language description of the thumbnail image  \n  - The full video transcript  \n- Your output should be a single JSON object that includes:\n  - A revised, SEO-optimized video title  \n  - Concise thumbnail text (3–5 words) that complements the revised title and aligns with the thumbnail’s visual tone.\n\n## Instructions  \n1. Read and analyze the original video title for its main topic and keywords.  \n2. Use the thumbnail description and video transcript to better understand the visual and content themes.  \n3. Generate a new title that:\n   - Maintains the original intent and main keywords  \n   - Improves structure, clarity, or emotional appeal  \n   - Stays under 70 characters  \n4. Create 3–5 words of thumbnail text that:\n   - Adds insight, urgency, or intrigue to support the title  \n   - Aligns with the visual style of the thumbnail  \n   - Feels natural when paired with the title  \n\n5. Output a single JSON object with both the revised title and thumbnail text in the following format:  \n   ```json\n   {\n     \"newTitle\": \"Improved YouTube video title\",\n     \"thumbnailText\": \"3–5 word thumbnail text\"\n   }\n   ```\n\n## Tools  \n- Original Title: `{{ $('Step 1 Results1').item.json.title }}`  \n- Thumbnail Description: `{{ $('Analyze Thumbnail1').item.json.choices[0].message.content }}`  \n- Video Transcript: `{{ $('HTTP Request1').item.json.captions }}`  \n\n## Examples  \n**Input:**  \n- Title: `\"He Built an AI Business With Just $100\"`  \n- Thumbnail Description: `\"A thumbnail showing a confident man pointing at a laptop, with large text reading 'From $100 to CEO'. The background features glowing tech icons on a dark gradient backdrop.\"`  \n- Transcript: *Describes how the subject bootstrapped a business using AI tools and minimal funding.*\n\n**Output:**  \n```json\n{\n  \"newTitle\": \"How He Launched an AI Startup with $100\",\n  \"thumbnailText\": \"AI Startup for $100\"\n}\n```\n\n**Input:**  \n- Title: `\"Top 10 ChatGPT Hacks You Didn't Know\"`  \n- Thumbnail Description: `\"A sleek modern thumbnail with neon text that says 'ChatGPT Tricks', showing a split screen of a person thinking and a glowing terminal interface.\"`  \n- Transcript: *Lists lesser-known prompts and features to boost productivity.*\n\n**Output:**  \n```json\n{\n  \"newTitle\": \"10 ChatGPT Hacks to Boost Productivity\",\n  \"thumbnailText\": \"Hidden GPT Features\"\n}\n```\n\n## SOP (Standard Operating Procedure)  \n1. Parse the input values: original title, thumbnail description, and transcript.  \n2. Identify key themes and keywords from the title.  \n3. Use visual and transcript context to improve the relevance and appeal of the new title.  \n4. Draft 1–2 thumbnail text options based on visual cues and the revised title.  \n5. Select the most compelling option.  \n6. Return the output as a clean JSON object with both fields.\n\n## Final Notes  \n- Do not include brand names or identifiable individuals unless they are generic and essential.  \n- Avoid vague adjectives and hype-driven phrasing.  \n- Keep the output concise, natural, and clear — ready for immediate use in automation or upload.\n---",
              "role": "system"
            }
          ]
        },
        "simplify": false,
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1940,
        220
      ],
      "id": "ee4fe41a-5dc0-43ba-80bf-58dd3a809cc8",
      "name": "YouTube Title Generator1"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=# Overview  \nYou are an AI agent responsible for analyzing a YouTube thumbnail via a provided URL and generating a single, well-written **natural language description** that captures the visual style, layout, and tone of the thumbnail. This description will be used as part of an image generation prompt to recreate a similarly styled thumbnail.\n\n## Context  \n- The agent uses OpenAI’s image understanding capabilities to visually analyze YouTube thumbnails.  \n- The goal is to create a **descriptive text output** that reflects the design, mood, and layout of the thumbnail — not to copy the content directly.  \n- The output should be a standalone sentence or paragraph in natural language, ready to be embedded in a larger prompt.\n\n## Instructions  \n1. Retrieve and analyze the thumbnail image from the given YouTube URL.  \n2. Identify and describe the following elements:\n   - Overall layout and composition  \n   - Character or subject placement (if applicable)  \n   - Background type and visual treatment  \n   - Font and text style, including content if legible  \n   - Dominant color palette and mood  \n3. Compose a fluent, single-string natural language description of the thumbnail.  \n4. The output should read like part of a prompt, e.g., \"An energetic YouTube thumbnail showing...\"  \n5. Do not include any structured formatting (like JSON, lists, or metadata).  \n\n## Tools  \n- OpenAI Image Understanding Node  \n\n## Examples  \n- **Input:**  \n  `https://i.ytimg.com/vi/HpkZU34fqUM/maxresdefault.jpg`  \n- **Output:**  \n  A high-energy YouTube thumbnail featuring a surprised man on the right side, with a bold red radial gradient background. Large comic-style yellow text appears on the left, creating a dramatic and urgent visual tone.\n\n- **Input:**  \n  `https://i.ytimg.com/vi/abc123xyz/default.jpg`  \n- **Output:**  \n  A clean, professional thumbnail showing a laptop with a blurred tech-themed background. Soft blue and gray tones dominate the scene, with sleek sans-serif text centered above the device.\n\n## SOP (Standard Operating Procedure)  \n1. Validate the provided YouTube thumbnail URL.  \n2. Retrieve the image and perform visual analysis using image capabilities.  \n3. Extract and synthesize details about layout, colors, subjects, and visual emphasis.  \n4. Write a **natural language description** that feels prompt-ready, descriptive, and cohesive.  \n5. Return only the final descriptive sentence or paragraph — no metadata, formatting, or JSON.\n\n## Final Notes  \n- Do not refer to brand names, creators, or exact text unless it's generic and descriptive.  \n- Focus on tone, layout, and composition to support style transfer, not replication.  \n- The description should serve as a high-quality visual summary usable in generative models.\n---",
        "imageUrls": "={{ $('Step 1 Results1').item.json.thumbnailUrl }}",
        "simplify": false,
        "options": {
          "detail": "high"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1500,
        220
      ],
      "id": "56d8baf9-3bc5-4640-afaf-2dffe729ac43",
      "name": "Analyze Thumbnail1"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA",
          "mode": "list",
          "cachedResultName": "YouTube Analysis",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 9266351,
          "mode": "list",
          "cachedResultName": "Competitor",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA/edit#gid=9266351"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "newTitle": "={{ $('YouTube Title Generator1').item.json.choices[0].message.content.newTitle }}",
            "thumbnailText": "={{ $('YouTube Title Generator1').item.json.choices[0].message.content.thumbnailText }}",
            "id": "={{ $('Step 1 Results1').item.json.id }}",
            "thumbnailDescription": "={{ $('Analyze Thumbnail1').item.json.choices[0].message.content }}",
            "videoTranscript": "={{ $('HTTP Request1').item.json.captions }}",
            "newOutline": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "input",
              "displayName": "input",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fromYTUrl",
              "displayName": "fromYTUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "thumbnailUrl",
              "displayName": "thumbnailUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "channelName",
              "displayName": "channelName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "channelUrl",
              "displayName": "channelUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "duration",
              "displayName": "duration",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "likes",
              "displayName": "likes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "numberOfSubscribers",
              "displayName": "numberOfSubscribers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "viewCount",
              "displayName": "viewCount",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "videoTranscript",
              "displayName": "videoTranscript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "thumbnailDescription",
              "displayName": "thumbnailDescription",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "thumbnailText",
              "displayName": "thumbnailText",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "newTitle",
              "displayName": "newTitle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "newOutline",
              "displayName": "newOutline",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2640,
        220
      ],
      "id": "07c9d65d-e547-4abb-853e-1adb815e3134",
      "name": "Update Rows1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/h7sDV53CddomktSi5/run-sync-get-dataset-items",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer API KEY"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"dateFilter\": \"month\",\n  \"downloadSubtitles\": false,\n  \"hasCC\": false,\n  \"hasLocation\": false,\n  \"hasSubtitles\": false,\n  \"is360\": false,\n  \"is3D\": false,\n  \"is4K\": false,\n  \"isBought\": false,\n  \"isHD\": false,\n  \"isHDR\": false,\n  \"isLive\": false,\n  \"isVR180\": false,\n  \"lengthFilter\": \"between420\",\n  \"maxResultStreams\": 0,\n  \"maxResults\": 100,\n  \"maxResultsShorts\": 0,\n  \"preferAutoGeneratedSubtitles\": false,\n  \"saveSubsToKVS\": false,\n  \"scrapeLastNDays\": 60,\n  \"searchQueries\": [\n    \"{{ $json.body.Keyword }}\"\n  ],\n  \"sortVideosBy\": \"NEWEST\",\n  \"sortingOrder\": \"date\",\n  \"videoType\": \"video\"\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        320,
        220
      ],
      "id": "ede4e5c7-8213-4f21-bd78-e32a5ce62bf5",
      "name": "YouTube Video Scrape1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/1s7eXiaukVuOr4Ueg/run-sync-get-dataset-items",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer API KEY"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"channelHandleBoolean\": true,\n  \"channelIDBoolean\": false,\n  \"channelNameBoolean\": true,\n  \"commentsBoolean\": false,\n  \"datePublishedBoolean\": false,\n  \"dateTextBoolean\": false,\n  \"descriptionBoolean\": false,\n  \"keywordsBoolean\": true,\n  \"likesBoolean\": false,\n  \"maxRetries\": 8,\n  \"outputFormat\": \"singleStringText\",\n  \"proxyOptions\": {\n    \"useApifyProxy\": true,\n    \"apifyProxyGroups\": []\n  },\n  \"relativeDateTextBoolean\": false,\n  \"subscriberCountBoolean\": false,\n  \"thumbnailBoolean\": false,\n  \"uploadDateBoolean\": false,\n  \"urls\": [\n    \"{{ $('Step 1 Results1').item.json.url }}\"\n  ],\n  \"viewCountBoolean\": false\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1720,
        220
      ],
      "id": "a9ad2cb1-4342-431f-b3b0-d15885cb13aa",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "GPT-4.1"
        },
        "messages": {
          "values": [
            {
              "content": "=# Overview  \nYou are an AI agent responsible for analyzing high-performing YouTube video transcripts and generating improved, original video outlines with a unique perspective.  \n\n## Context  \n- The agent receives the transcript of a successful YouTube video from another creator.  \n- The goal is not to copy, but to use the structure and content as a benchmark to craft a new outline that offers a distinct angle or interpretation of the topic.  \n- The resulting outline should maintain the engaging qualities of the original while providing fresh value to the target audience.  \n\n## Instructions  \n1. Analyze the input transcript to understand the topic, flow, structure, and elements that likely contributed to its performance.  \n2. Identify opportunities to reinterpret, reframe, or expand on the topic in a unique way.  \n3. Develop a new outline that:\n   - Retains the core appeal of the original video.  \n   - Presents a different perspective, argument, or theme.  \n   - Enhances clarity, relatability, and retention where possible.  \n4. Structure the new outline into standard YouTube sections (Hook, Introduction, Main Points, Call to Action, etc.).  \n5. Ensure the tone and content are original and distinct while still appealing to a similar audience.  \n\n## Tools  \n- None (analysis and outline generation only)  \n\n## Examples  \n- Input:  \n {{ $('HTTP Request1').item.json.captions }}\n\n- Output:  \n  - Hook: Challenge a commonly held belief related to the topic.  \n  - Introduction: Present your own experience or angle on the issue.  \n  - Section 1: Explore the topic using a new metaphor or real-world example.  \n  - Section 2: Address a subtopic the original did not cover.  \n  - Section 3: Offer actionable advice or a unique conclusion.  \n  - Call to Action: Encourage viewers to comment with their own experiences or thoughts.  \n\n## SOP (Standard Operating Procedure)  \n1. Review the transcript to understand key takeaways, pacing, and style.  \n2. Extract the main topic and how the original creator approached it.  \n3. Brainstorm unique takes, new angles, or opposing views that can form the basis of a fresh outline.  \n4. Draft an outline that follows a proven structure but deviates meaningfully in substance or perspective.  \n5. Return the new outline in a clean, sectioned bullet-point format ready for video scripting.  \n\n## Final Notes  \n- The goal is to differentiate while building on what worked.  \n- Avoid mirroring phrases or points from the original—reframe and rephrase.  \n- The final outline should feel original, relevant, and optimized for YouTube engagement.  \n---",
              "role": "system"
            },
            {
              "content": "=Video Transcript: {{ $('HTTP Request1').item.json.captions }}"
            }
          ]
        },
        "simplify": false,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2300,
        220
      ],
      "id": "2a2c3046-e094-4073-94c2-8bf8eab6ce14",
      "name": "Outline Generator1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "36dbed7a-fab1-4c49-ac7e-b209f1d75325",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        40,
        220
      ],
      "id": "f668ec13-8d5e-4fe4-893f-a5622acf3ed4",
      "name": "Webhook2",
      "webhookId": "36dbed7a-fab1-4c49-ac7e-b209f1d75325"
    },
    {
      "parameters": {
        "content": "## YouTube Keyword Search",
        "width": 400
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "4771e516-9251-4196-b19b-89f01aafc3f6",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "jsCode": "// Transform title analysis into comma-separated strings for Google Sheets\nconst input = $input.first().json;\n\n// Extract data from OpenAI API response structure\nconst data = input.choices?.[0]?.message?.content || input;\n\n// Convert title variations to comma-separated string  \nconst titleVariations = (data.titleVariations || [])\n  .map(item => `${item.angle}: ${item.title}`)\n  .join(', ');\n\n// Convert key elements to comma-separated string\nconst keyElements = (data.keyElements || []).join(', ');\n\nreturn [{\n  json: {\n    // Title analysis data\n    originalTitle: data.originalTitle || '',\n    titlePattern: data.titlePattern || '',\n    whyItWorks: data.whyItWorks || '',\n    keyElements: keyElements,\n    thumbnailText: data.thumbnailText || '',\n    titleVariations: titleVariations,\n    \n    // Metadata\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1200,
        1140
      ],
      "id": "56163541-034b-45a5-a373-5f8577bea3c9",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "// Transform simple hook analysis for Google Sheets\nconst input = $input.first().json;\n\n// Extract data from OpenAI API response structure\nconst data = input.choices?.[0]?.message?.content || input;\n\nreturn [{\n  json: {\n    videoSummary: data.videoSummary || '',\n    originalHook: data.originalHook || '',\n    hookPattern: data.hookPattern || '',\n    whyHookWorks: data.whyHookWorks || '',\n    hookVariation: data.hookVariation || '',\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1920,
        1140
      ],
      "id": "b16608d5-421c-45ea-a0bb-13f5116e75b0",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA",
          "mode": "list",
          "cachedResultName": "YouTube Analysis",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 9266351,
          "mode": "list",
          "cachedResultName": "Competitor",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WiO1DONacpnXWFo6HBtmSrGoaRje6bRy0tTnE1i_5wA/edit#gid=9266351"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "viewCount": "={{ $json.viewCount }}",
            "numberOfSubscribers": "={{ $json.aboutChannelInfo.numberOfSubscribers }}",
            "likes": "={{ $json.likes }}",
            "id": "={{ $json.id }}",
            "title": "={{ $json.title }}",
            "url": "={{ $json.url }}",
            "channelName": "={{ $json.channelName }}",
            "duration": "={{ $json.duration }}",
            "thumbnailUrl": "={{ $json.thumbnailUrl }}",
            "comments": "={{ $json.commentsCount }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "channelName",
              "displayName": "channelName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "thumbnailUrl",
              "displayName": "thumbnailUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "duration",
              "displayName": "duration",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "viewCount",
              "displayName": "viewCount",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "likes",
              "displayName": "likes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "comments",
              "displayName": "comments",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "numberOfSubscribers",
              "displayName": "numberOfSubscribers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Generate New Video",
              "displayName": "Generate New Video",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "video Transcript",
              "displayName": "video Transcript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Video Summary",
              "displayName": "Video Summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "thumbnailDescription",
              "displayName": "thumbnailDescription",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "thumbnailText",
              "displayName": "thumbnailText",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Title Pattern",
              "displayName": "Title Pattern",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Why Title Works",
              "displayName": "Why Title Works",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "New Titles",
              "displayName": "New Titles",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Original Hook",
              "displayName": "Original Hook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook Pattern",
              "displayName": "Hook Pattern",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Why Hook Works",
              "displayName": "Why Hook Works",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook Variations",
              "displayName": "Hook Variations",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1420,
        640
      ],
      "id": "ea773a92-7c52-4228-a612-a9e15ad8cb42",
      "name": "Results"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-16T20:40:30.721Z",
  "versionId": "64a43c2b-8751-42ea-8338-e1e54ca41261"
}