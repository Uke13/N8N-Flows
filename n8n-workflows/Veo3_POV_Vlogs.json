{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log the Idea": {
      "main": [
        [
          {
            "node": "Prompts AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Ideas AI Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Prompts AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ideas AI Agent": {
      "main": [
        [
          {
            "node": "Log the Idea",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompts AI Agent": {
      "main": [
        [
          {
            "node": "Setting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Ideas AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Ideas AI Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Prompts AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Setting": {
      "main": [
        [
          {
            "node": "Vertex AI-VEO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vertex AI-fetch": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Vertex AI-fetch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload file": {
      "main": [
        [
          {
            "node": "Log Final Video in Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vertex AI-VEO": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Ideas AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Upload file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-26T12:29:16.476Z",
  "id": "eADgfiMmjNL3DvMD",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Veo3_POV_Vlogs",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        40,
        60
      ],
      "id": "9046189d-78e8-42fa-b6f7-7e7b5b4beea5",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1Dr1-JXJnXLznUE_RY8d8N8_vBksb5FdqNvy3gHwBhSo",
          "mode": "list",
          "cachedResultName": "Veo 3 in N8N",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Dr1-JXJnXLznUE_RY8d8N8_vBksb5FdqNvy3gHwBhSo/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Dr1-JXJnXLznUE_RY8d8N8_vBksb5FdqNvy3gHwBhSo/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "==ROW()-1",
            "idea": "={{ $json.output[0].Idea }}",
            "caption": "={{ $json.output[0].Caption }}",
            "environment_prompt": "={{ $json.output[0].Environment }}",
            "production": "={{ $json.output[0].Status }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "idea",
              "displayName": "idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "production",
              "displayName": "production",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "environment_prompt",
              "displayName": "environment_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "final_output",
              "displayName": "final_output",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        880,
        60
      ],
      "id": "46a63914-0595-4557-801f-66e1087decf1",
      "name": "Log the Idea",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "description": "Use the tool to think about something. It will not obtain new information or change the database but just append the thought to the log. Use it when complex reasoning or some cache memory is needed."
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        960,
        360
      ],
      "id": "90e5154c-78a3-4605-9927-dbb8e867f6e4",
      "name": "Think"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Give me an idea about THE TOPIC {{ $json['Video Idea'] }}\n\nTHE VIDEO STYLE WILL BE {{ $json.Style }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are an AI designed to generate 1 immersive, realistic idea based on a user-provided topic. Your output must be formatted as a JSON array (single line) and follow all the rules below exactly.\n\nUSE THE GEMINI TOOL AND THINK ABOUT YOUR RESPONSES BEFORE YOU ANSWER.\n\nRULES:\n\nOnly return 1 idea at a time.\n\nThe user will provide a key topic (e.g. “urban farming,” “arctic survival,” “street food in Vietnam”).\n\nThe Idea must:\n\nBe under 13 words.\n\nDescribe an interesting and viral-worthy moment, action, or event related to the provided topic.\n\nCan be as surreal as you can get, doesn't have to be real-world!\n\nInvolves a character.\n\nThe Caption must be:\n\nShort, punchy, and viral-friendly.\n\nInclude one relevant emoji.\n\nInclude exactly 12 hashtags in this order:\n** 4 topic-relevant hashtags\n** 4 all-time most popular hashtags\n** 4 currently trending hashtags (based on live research)\n\nAll hashtags must be lowercase.\n\nSet Status to \"for production\" (always).\n\nThe Environment must:\n\nBe under 20 words.\n\nMatch the action in the Idea exactly.\n\nClearly describe:\n\nWhere the event is happening (e.g. rooftop, jungle trail, city alley, frozen lake)\n\nKey visuals or background details (e.g. smoke rising, neon lights, fog, birds overhead)\n\nMain participants (e.g. farmer, cook, mechanic, rescue team, animal)\n\nStyle of scene (e.g. cinematic realism, handheld docu-style, aerial tracking shot, macro close-up)\n\nOk with fictional settings\n\nOUTPUT FORMAT (single-line JSON array):\n\n\n[\n  {\n    \"Caption\": \"Short viral title with emoji #4_topic_hashtags #4_all_time_popular_hashtags #4_trending_hashtags\",\n    \"Idea\": \"Short idea under 13 words\",\n    \"Environment\": \"Brief vivid setting under 20 words matching the action\",\n    \"Status\": \"for production\"\n  }\n]\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        460,
        60
      ],
      "id": "b2c431a8-b3f7-4c23-821e-407baf5254f9",
      "name": "Ideas AI Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Give me a Veo3 prompt for this idea:\n{{ $json.idea }}\n\nThis is the environment:\n{{ $json.environment_prompt }}\n\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=SYSTEM PROMPT FOR GOOGLE VEO3 PROMPT AGENT\n\nYou are an AI agent that writes hyper-realistic, cinematic video prompts for Google VEO3. Each prompt should describe a short, vivid {{ $('Get row(s) in sheet').item.json.Style }}-style video clip featuring one unnamed character speaking or acting in a specific moment. The final video should look like found footage or documentary-style film — grounded, realistic, and immersive.\n\nREQUIRED STRUCTURE (FILL IN THE BRACKETS BELOW):\n\n[Scene paragraph prompt here]\n\nMain character: [description of character]\nThey say: [insert one line of dialogue, fits the scene and mood].\nThey [describe a physical action or subtle camera movement, e.g. pans the camera, shifts position, glances around].\nTime of Day: [day / night / dusk / etc.]\nLens: [describe lens]\nAudio: (implied) [ambient sounds, e.g. lion growls, wind, distant traffic, birdsong]\nBackground: [brief restatement of what is visible behind them]\n\nRULES FOR PROMPT GENERATION\n\nSingle paragraph only, 750–1500 characters. No line breaks or headings.\n\nOnly one human character. Never give them a name.\n\nInclude one spoken line of dialogue and describe how it’s delivered.\n\nCharacter must do something physical, even if subtle (e.g. glance, smirk, pan camera).\n\nUse {{ $('Get row(s) in sheet').item.json.Style }}-style framing. Always describe the lens, stock, and camera behavior.\n\nAlways ensure the main subject is centered in the shot and composed for a vertical frame.\n\nScene must feel real and cinematic — like a short clip someone might record on a stylized camera.\n\nAlways include the five key technical elements: Time of Day, Lens, Film Stock, Audio, and Background.\n\nDO NOT DO THIS:\n\nDon’t name the character.\n\nDon’t include more than one character. \n\nDon't include any special characters.\n\nDon’t describe subtitles or on-screen text.\n\nDon’t break the paragraph or use formatting.\n\nDon’t write vague or abstract scenes — always keep them grounded in physical detail."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        40,
        340
      ],
      "id": "866f5916-de0c-4618-abe1-f1f754b34a21",
      "name": "Prompts AI Agent"
    },
    {
      "parameters": {
        "jsonSchemaExample": "[\n  {\n    \"Caption\": \"Diver Removes Nets Off Whale 🐋 #whalerescue #marinelife #oceanrescue #seahelpers #love #nature #instagood #explore #viral #savenature #oceanguardians #cleanoceans\",\n    \"Idea\": \"Diver carefully cuts tangled net from distressed whale in open sea\",\n    \"Environment\": \"Open ocean, sunlight beams through water, diver and whale, cinematic realism\",\n    \"Status\": \"for production\"\n  }\n]\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        820,
        360
      ],
      "id": "8f822ff2-4d96-4ee0-be4b-d62a3dc6e384",
      "name": "Parser"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        680,
        360
      ],
      "id": "fb22bde8-6fda-4caa-b8e1-b70d71de3a74",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "5RIlcRxAwcxJePMo",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5cedc3de-6221-4d7e-a6c8-82f4cb9cf0e9",
              "name": "PROJECT_ID",
              "type": "string",
              "value": "integral-loop-464312-n7"
            },
            {
              "id": "90019751-e2d5-4764-9bf9-e13916dcc528",
              "name": "MODEL_VERSION",
              "type": "string",
              "value": "veo-3.0-generate-preview"
            },
            {
              "id": "67ab205c-82b3-4263-99c4-c906a0ca6ae9",
              "name": "LOCATION",
              "type": "string",
              "value": "us-central1"
            },
            {
              "id": "413415fb-60c5-4d0d-ac45-1e6178a55227",
              "name": "TEXT_PROMPT",
              "type": "string",
              "value": "={{ $json.output }}"
            },
            {
              "id": "17954335-b96b-4813-9c4a-20817d675448",
              "name": "API_ENDPOINT",
              "type": "string",
              "value": "us-central1-aiplatform.googleapis.com"
            }
          ]
        },
        "options": {}
      },
      "id": "6535ff62-b4a8-4838-9a94-cda113bc2a36",
      "name": "Setting",
      "type": "n8n-nodes-base.set",
      "position": [
        440,
        340
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Setting').item.json.API_ENDPOINT }}/v1/projects/{{ $('Setting').item.json.PROJECT_ID }}/locations/{{ $('Setting').item.json.LOCATION }}/publishers/google/models/{{ $('Setting').item.json.MODEL_VERSION }}:fetchPredictOperation\n",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"operationName\": \"{{ $json.name }}\"\n}\n",
        "options": {}
      },
      "id": "b2feb8c9-de7d-4c4d-8dda-5e5edbaf3e6b",
      "name": "Vertex AI-fetch",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        460,
        640
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "i6X3fH9gEWk4yda5",
          "name": "VERTEX API ACCESS"
        }
      }
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "minutes"
      },
      "id": "c0a66a7a-c872-4b4f-b811-cd795d098718",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        260,
        640
      ],
      "typeVersion": 1.1,
      "webhookId": "ca4136c0-182a-43e0-b234-079ffe826eea"
    },
    {
      "parameters": {
        "name": "={{ $('Ideas AI Agent').item.json.output[0].Idea.replace(/\\s+/g, '_') + '_' + $now.toMillis() }}",
        "driveId": {
          "__rl": true,
          "value": "My Drive",
          "mode": "list",
          "cachedResultName": "My Drive",
          "cachedResultUrl": "https://drive.google.com/drive/my-drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1Fxy3A-PBEmmKaKvOPNsfNoQEt3E_djdZ",
          "mode": "list",
          "cachedResultName": "VEO3 VIDS",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1Fxy3A-PBEmmKaKvOPNsfNoQEt3E_djdZ"
        },
        "options": {}
      },
      "id": "e447d21e-b2c3-44a4-bc9c-6907bbf29150",
      "name": "Upload file",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        900,
        640
      ],
      "typeVersion": 3,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "riu0dmvkvZhqSNMZ",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1Dr1-JXJnXLznUE_RY8d8N8_vBksb5FdqNvy3gHwBhSo",
          "mode": "list",
          "cachedResultName": "Veo 3 in N8N",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Dr1-JXJnXLznUE_RY8d8N8_vBksb5FdqNvy3gHwBhSo/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Dr1-JXJnXLznUE_RY8d8N8_vBksb5FdqNvy3gHwBhSo/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "idea": "={{ $('Log the Idea').item.json.idea }}",
            "production": "done",
            "final_output": "={{ $('Upload file').item.json.webViewLink }}",
            "row_number": 0
          },
          "matchingColumns": [
            "idea"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "idea",
              "displayName": "idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "production",
              "displayName": "production",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "environment_prompt",
              "displayName": "environment_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "final_output",
              "displayName": "final_output",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1120,
        640
      ],
      "id": "4015eab6-be03-4b6e-83b3-9a4c52647ab2",
      "name": "Log Final Video in Sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $json.API_ENDPOINT }}/v1/projects/{{ $json.PROJECT_ID }}/locations/{{ $json.LOCATION }}/publishers/google/models/{{ $json.MODEL_VERSION }}:predictLongRunning",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"endpoint\": \"projects/{{ $json.PROJECT_ID }}/locations/{{ $json.LOCATION }}/publishers/google/models/{{ $json.MODEL_VERSION }}\",\n  \"instances\": [\n    {\n      \"prompt\": {{ JSON.stringify($json.TEXT_PROMPT) }}\n    }\n  ],\n  \"parameters\": {\n    \"aspectRatio\": \"16:9\",\n    \"sampleCount\": 1,\n    \"durationSeconds\": \"8\",\n    \"personGeneration\": \"allow_all\",\n    \"addWatermark\": true,\n    \"includeRaiReason\": true,\n    \"generateAudio\": true\n  }\n}\n",
        "options": {}
      },
      "id": "22b936b1-7af2-403d-9554-eb14930a7319",
      "name": "Vertex AI-VEO",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        40,
        640
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "i6X3fH9gEWk4yda5",
          "name": "VERTEX API ACCESS"
        }
      }
    },
    {
      "parameters": {
        "content": "## Part 1: Idea Generation",
        "height": 240,
        "width": 1300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "6a639202-9dbb-4abe-b871-d813d17b4044",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Part 2: Prompt Generation\n",
        "height": 240,
        "width": 1320,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        280
      ],
      "typeVersion": 1,
      "id": "cff08225-fdcf-4c1f-aba8-d54b3b337a88",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Part 3: Video Generation\n",
        "height": 240,
        "width": 1320,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        580
      ],
      "typeVersion": 1,
      "id": "b1e87427-0b0f-4bf4-a3d2-ba225a7173b0",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Dr1-JXJnXLznUE_RY8d8N8_vBksb5FdqNvy3gHwBhSo",
          "mode": "list",
          "cachedResultName": "Veo 3 in N8N",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Dr1-JXJnXLznUE_RY8d8N8_vBksb5FdqNvy3gHwBhSo/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1052334237,
          "mode": "list",
          "cachedResultName": "IDEAS",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Dr1-JXJnXLznUE_RY8d8N8_vBksb5FdqNvy3gHwBhSo/edit#gid=1052334237"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "COMPLETE",
              "lookupValue": "NO"
            }
          ]
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "detectAutomatically",
              "readRowsUntil": "firstEmptyRow"
            }
          },
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        260,
        60
      ],
      "id": "b5e561dc-7527-4d52-9d1c-ad4946e27e7a",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "for (const item of items) {\n  // Get the Base64 string from the correct path\n  const base64Data = item.json.response.videos[0].bytesBase64Encoded;\n\n  // Create the binary data property\n  item.binary = {\n    data: Buffer.from(base64Data, 'base64')\n  };\n}\n\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        640
      ],
      "id": "f86c134b-132a-4372-b410-d63824737bd5",
      "name": "Code"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-07-26T12:29:16.476Z",
      "updatedAt": "2025-07-26T12:29:16.476Z",
      "role": "workflow:owner",
      "workflowId": "eADgfiMmjNL3DvMD",
      "projectId": "aYesZFcPjHzYQyLq"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-26T14:33:23.254Z",
  "versionId": "744f24c4-3b2a-4260-9d4f-98736a0b3554"
}