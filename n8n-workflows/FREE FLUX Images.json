{
  "active": false,
  "connections": {
    "Generate Images Flux Free": {
      "main": [
        [
          {
            "node": "Wait 15 sec",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image": {
      "main": [
        [
          {
            "node": "Facebook",
            "type": "main",
            "index": 0
          },
          {
            "node": "Instagram Container ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook": {
      "main": [
        [
          {
            "node": "IS POSTED?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instagram Container ID": {
      "main": [
        [
          {
            "node": "Wait 30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Parse Video Titles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Video Titles": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Fallout-style prompt generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Fallout-style prompt generator": {
      "main": [
        [
          {
            "node": "Generate Images Flux Free",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 15 sec": {
      "main": [
        [
          {
            "node": "Download Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 30": {
      "main": [
        [
          {
            "node": "Publish to Instagram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Publish to Instagram": {
      "main": [
        [
          {
            "node": "IS POSTED?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IS POSTED?": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IS POSTED?1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-03T13:47:11.198Z",
  "id": "nmxtpiiXDbPoE6ag",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "FREE FLUX Images",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.together.xyz/v1/images/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"black-forest-labs/FLUX.1-schnell-Free\",\n  \"prompt\": \"{{ $json.prompt }}\",\n  \"width\": 720,\n  \"height\": 1280,\n  \"steps\": 4,\n  \"seed\": 1,\n  \"response_format\": \"url\",\n  \"output_format\": \"jpeg\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        576,
        -48
      ],
      "id": "6d1d00c8-b83a-4a72-8a9a-e9379d592a30",
      "name": "Generate Images Flux Free",
      "credentials": {
        "httpHeaderAuth": {
          "id": "JdfDCxKTwaEVNBKO",
          "name": "TOGETHER_API"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.data[0].url }}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1024,
        -48
      ],
      "id": "2f9e2cea-e231-4d3f-a8bd-3e6c88e56ac1",
      "name": "Download Image"
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v23.0",
        "node": "689331224264136",
        "edge": "photos",
        "sendBinaryData": true,
        "binaryPropertyName": "=data",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "caption",
                "value": "={{ $('AI Agent').item.json.output.socialCaption }} Check out the video on #ShockedHistory "
              },
              {
                "name": "url",
                "value": "={{ $('Generate Images Flux Free').item.json.data[0].url }}"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        1472,
        -144
      ],
      "id": "ca1d6f24-6a30-4bc1-9092-e9d9653b3de7",
      "name": "Facebook",
      "credentials": {
        "facebookGraphApi": {
          "id": "7LqmSLXmdFIqY9ah",
          "name": "SHOCKED HISTORY Facebook"
        }
      }
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v23.0",
        "node": "17841475038413037",
        "edge": "media",
        "sendBinaryData": true,
        "binaryPropertyName": "=data",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "caption",
                "value": "={{ $('AI Agent').item.json.output.socialCaption }}  Check out the video on #ShockedHistory"
              },
              {
                "name": "media_type",
                "value": "IMAGE"
              },
              {
                "name": "image_url",
                "value": "={{ $('Generate Images Flux Free').item.json.data[0].url }}"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        1248,
        48
      ],
      "id": "6504e120-531d-487d-b874-eeecf2b3655b",
      "name": "Instagram Container ID",
      "credentials": {
        "facebookGraphApi": {
          "id": "ZT7Powit0HHCB9Hh",
          "name": "Instagram Shocked History"
        }
      }
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v23.0",
        "node": "17841475038413037",
        "edge": "media_publish",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "caption",
                "value": "#ShockedHistory"
              },
              {
                "name": "image_url",
                "value": "={{ $('Generate Images Flux Free').item.json.data[0].url }}"
              },
              {
                "name": "creation_id",
                "value": "={{ $json.id }}"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        1696,
        48
      ],
      "id": "c99eb15a-2adf-4206-8491-c3ffc1c39456",
      "name": "Publish to Instagram",
      "credentials": {
        "facebookGraphApi": {
          "id": "ZT7Powit0HHCB9Hh",
          "name": "Instagram Shocked History"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -864,
        -48
      ],
      "id": "e1c80e85-fa18-4311-b304-f5d036a99bf2",
      "name": "Schedule Trigger",
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1uxOHb33pGIhAtbwjIjtTevhAZ6dWNg3el0VwJ8xInbc",
          "mode": "list",
          "cachedResultName": "SHOCKED HISTORY POST TO TIKTOK",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1uxOHb33pGIhAtbwjIjtTevhAZ6dWNg3el0VwJ8xInbc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1uxOHb33pGIhAtbwjIjtTevhAZ6dWNg3el0VwJ8xInbc/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -496,
        -48
      ],
      "id": "bb3bf7eb-f834-4b98-a4c3-cde885bff858",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get all input items (each item is a row)\nconst inputItems = $input.all();\n\nif (!inputItems || inputItems.length === 0) {\n  return [{ json: { error: 'No rows returned from Google Sheets' } }];\n}\n\nconst availableTitles = [];\n\n// Each input item is a row object\nfor (let i = 0; i < inputItems.length; i++) {\n  const rowData = inputItems[i].json;\n  \n  const title = rowData.TITLE;\n  const photoPosted = rowData['PHOTO POSTED'];\n  \n  // Skip if no title or if it's a header\n  if (!title || title.toLowerCase() === 'title') continue;\n  \n  // Check if PHOTO POSTED is empty\n  if (title.trim().length > 0 && (!photoPosted || photoPosted.toString().trim() === '')) {\n    availableTitles.push({\n      title: title.trim(),\n      rowNumber: rowData.row_number,\n      date: rowData.DATE,\n      description: rowData.DESC\n    });\n  }\n}\n\nif (availableTitles.length === 0) {\n  return [{ json: { \n    error: 'No available titles found',\n    totalRows: inputItems.length,\n    sampleRow: inputItems[0].json\n  }}];\n}\n\n// Random selection\nconst randomIndex = Math.floor(Math.random() * availableTitles.length);\nconst randomSelection = availableTitles[randomIndex];\n\nconsole.log(`Selected \"${randomSelection.title}\" (${randomIndex + 1} of ${availableTitles.length} available)`);\n\nreturn [{\n  json: {\n    selectedTitle: randomSelection.title,\n    rowNumber: randomSelection.rowNumber,\n    availableCount: availableTitles.length,\n    selectedDate: randomSelection.date\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -272,
        -48
      ],
      "id": "1809c8cd-4e04-439c-b961-0dfe473d0093",
      "name": "Parse Video Titles"
    },
    {
      "parameters": {
        "jsCode": "// Get the agent's response\nconst inputData = $input.all()[0].json;\nconst agentData = inputData.output || inputData;\n\nconst originalTitle = agentData.originalTitle;\nconst context = agentData.context;\n\nif (!originalTitle || !context) {\n  return [{\n    json: {\n      error: 'Missing title or context from agent',\n      receivedData: agentData\n    }\n  }];\n}\n\n// Technical/style enhancements - all include \"Fallout game style\"\nconst technicalDetails = [\n  'highly detailed Fallout game concept art style',\n  'photorealistic Fallout game documentary style',\n  'cinematic Fallout game photography style',\n  'weathered Fallout game aesthetic with rich atmospheric depth',\n  'vintage atomic age Fallout game style with film grain'\n];\n\n// Pick a random technical style (but all mention Fallout)\nconst selectedTechnical = technicalDetails[Math.floor(Math.random() * technicalDetails.length)];\n\n// Add technical enhancement to the agent's context\nconst finalPrompt = `${context}, ${selectedTechnical}, cinematic composition`;\n\nconsole.log(`Using agent's context with Fallout-focused technical enhancement for \"${originalTitle}\"`);\n\nreturn [{\n  json: {\n    prompt: finalPrompt,\n    videoTitle: originalTitle,\n    context: context,\n    technicalStyle: selectedTechnical,\n    generatedAt: new Date().toISOString()\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        352,
        -48
      ],
      "id": "0e8537cf-1828-4d52-b24e-fa4f005a7c29",
      "name": "Fallout-style prompt generator"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Given this video title: \"{{ $('Parse Video Titles').item.json.selectedTitle }}\", provide:\n\n1. A brief 2-3 sentence visual description focusing on key elements that would appear in Fallout video game style as weathered, post-apocalyptic remnants (this is for image generation only)\n2. A catchy social media title (50 characters or less) about the historical topic itself\n3. A Facebook/Instagram caption about the historical mystery/topic that's engaging and educational\n\nReturn your response in this exact JSON format:\n{\n  \"originalTitle\": \"{{ $('Parse Video Titles').item.json.selectedTitle }}\",\n  \"context\": \"Your 2-3 sentence Fallout-style visual description for image generation\",\n  \"socialTitle\": \"Historical topic title (no mention of Fallout)\",\n  \"socialCaption\": \"Engaging caption about the actual historical topic with emojis and relevant hashtags\"\n}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -48,
        -48
      ],
      "id": "4da51968-35a0-4dd2-b31d-74233896091e",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-chat-v3-0324:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -16,
        176
      ],
      "id": "7a272325-be6f-4b4f-bd22-37b404596f2e",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "Z0qdSGsCKeFZM9R5",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"originalTitle\": \"{{ $('Parse Video Titles').item.json.selectedTitle }}\",\n  \"context\": \"Your 2-3 sentence Fallout-style visual description for image generation\",\n  \"socialTitle\": \"Historical topic title (no mention of Fallout)\",\n  \"socialCaption\": \"Engaging caption about the actual historical topic with emojis and relevant hashtags\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        112,
        176
      ],
      "id": "27d628a6-3a34-4643-be34-838d0679cb7b",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        800,
        -48
      ],
      "id": "2dc905c6-e075-4abb-8325-643a3f8407e2",
      "name": "Wait 15 sec",
      "webhookId": "17b7db75-1f35-4e3c-b129-ab3a70ae02fd"
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1472,
        48
      ],
      "id": "103b14d7-b3f3-43c3-aabd-48acab0a696f",
      "name": "Wait 30",
      "webhookId": "06f6a4e3-c628-4ffa-a9ba-143d377ade5a"
    },
    {
      "parameters": {
        "graphApiVersion": "v23.0",
        "node": "={{ $json.post_id }}",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "fields",
                "value": "is_published,scheduled_publish_time,permalink_url"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        1696,
        -144
      ],
      "id": "6b54ca9b-2fd7-4310-a414-1b16a65f66d8",
      "name": "IS POSTED?",
      "credentials": {
        "facebookGraphApi": {
          "id": "7LqmSLXmdFIqY9ah",
          "name": "SHOCKED HISTORY Facebook"
        }
      }
    },
    {
      "parameters": {
        "graphApiVersion": "v23.0",
        "node": "={{ $json.id }}",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "fields",
                "value": "permalink,id,timestamp"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        1904,
        48
      ],
      "id": "f9ecbf8d-e497-447f-a37e-06324a9865ac",
      "name": "IS POSTED?1",
      "credentials": {
        "facebookGraphApi": {
          "id": "ZT7Powit0HHCB9Hh",
          "name": "Instagram Shocked History"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// This code reads the simple list of items from the Merge node and finds\n// the Facebook and Instagram data within it.\n\nlet fbData = null;\nlet igData = null;\n\n// 1. Loop through the list of items to identify and store the data for each platform.\nfor (const item of items) {\n  const data = item.json;\n\n  // Identify Facebook data by its unique keys: 'is_published' and 'permalink_url'.\n  if (data.is_published !== undefined && data.permalink_url) {\n    fbData = data;\n  }\n  // Identify Instagram data by its unique keys: 'permalink' and 'timestamp'.\n  else if (data.permalink && data.timestamp) {\n    igData = data;\n  }\n}\n\n// 2. After checking all items, perform the final check to see if both were found and successful.\nif (fbData && fbData.is_published === true && igData && igData.permalink) {\n  // If yes, return the single success message.\n  return [{\n    json: {\n      status: \"All posts succeeded! 🎉\",\n      facebook_url: fbData.permalink_url,\n      instagram_url: igData.permalink\n    }\n  }];\n} else {\n  // If not, return a debug message showing exactly what was found.\n  return [{\n    json: {\n      status: \"Condition check failed. ❌\",\n      debug_info: {\n        facebook_data_found: fbData || \"Facebook data not found in the list.\",\n        instagram_data_found: igData || \"Instagram data not found in the list.\"\n      }\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2416,
        -64
      ],
      "id": "06282c08-7b08-48b3-bd72-9ff4a52fc0a1",
      "name": "Code"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2176,
        -64
      ],
      "id": "57675f17-f3a9-4b43-bd39-efafd36efbb5",
      "name": "Merge"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1uxOHb33pGIhAtbwjIjtTevhAZ6dWNg3el0VwJ8xInbc",
          "mode": "list",
          "cachedResultName": "SHOCKED HISTORY POST TO TIKTOK",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1uxOHb33pGIhAtbwjIjtTevhAZ6dWNg3el0VwJ8xInbc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1uxOHb33pGIhAtbwjIjtTevhAZ6dWNg3el0VwJ8xInbc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "PHOTO POSTED": "YES",
            "TITLE": "=",
            "row_number": "={{ $('Parse Video Titles').first().json.rowNumber }}\n\n"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "DATE",
              "displayName": "DATE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "TITLE",
              "displayName": "TITLE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "DESC",
              "displayName": "DESC",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "PHOTO POSTED",
              "displayName": "PHOTO POSTED",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2624,
        -64
      ],
      "id": "4ed16e78-1f61-4ae3-939b-430a835ba728",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "G5F0HGiAwsbqZpbE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -864,
        176
      ],
      "id": "87aa6fb0-1498-4646-8988-86a999ccc719",
      "name": "When clicking ‘Execute workflow’"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-03T13:47:11.198Z",
      "updatedAt": "2025-08-03T13:47:11.198Z",
      "role": "workflow:owner",
      "workflowId": "nmxtpiiXDbPoE6ag",
      "projectId": "aYesZFcPjHzYQyLq"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-03T13:57:08.438Z",
      "updatedAt": "2025-08-03T13:57:08.438Z",
      "id": "Mas1jE28bXSMu19L",
      "name": "Fully Functional"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-08-16T17:15:06.999Z",
  "versionId": "95a8f733-6d0f-4360-9d7a-b8992318fb7c"
}